<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>厦门五日游-直男特别攻略</title>
      <link href="/2731/"/>
      <url>/2731/</url>
      
        <content type="html"><![CDATA[<h1 id="five-days-happy"><a href="#five-days-happy" class="headerlink" title="five days happy"></a>five days happy</h1><div style="color:red"><br>  one time play,one time happy.<br>  always play, always happy<br></div><blockquote><p>网络攻略TOP10热词</p><p>鼓浪屿<br>中山路<br>厦门大学<br>中山路<br>曾厝垵<br>环岛路<br>南普陀寺</p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>厦门景点太分散，除非功课做的特别好，否则不建议自己玩，很浪费时间 ；</li><li>鼓浪屿实行实名制，游客报名是必须提供准确的名字及身份证号，登船凭船票、证件、人一致方可登船（小孩无身份证可携带户口簿）。</li><li>重要提示：上鼓浪屿的唯一方式是坐船,鼓浪屿实行人数限制，轮渡票需提前订票，提前订票,提前订票!!!</li><li>在启程之前要做好大致的行程安排、 因为好订酒店，不然你都搞不清楚要住哪里，尤其旺季临时订肯定没房，人超级多哦；</li><li>不要轻信在街上“跑路单”的出租车和顺风车司机的鬼话，说50元载你目的地，很近呀，其实他们就是把你们卖给其他旅行社赚钱，一定要牢记天下没有免费的午餐，不然你至少要多花3000以上的费用。</li><li>防晒用品：厦门日照强烈，墨镜、阳伞、遮阳帽、防晒霜（指数要高）、润唇膏等可以有效的防止紫外线，如果不采取任何防晒措施的话，皮肤很容易被晒黑或晒伤。【虽然下雨天气居多，带上以防不时之需】<a id="more"></a></li></ol><h2 id="防坑指南"><a href="#防坑指南" class="headerlink" title="防坑指南"></a>防坑指南</h2><h3 id="住宿"><a href="#住宿" class="headerlink" title="住宿"></a>住宿</h3><ol><li>不要跟机场、车站出口处的拉客仔或拉客大妈去他们推荐的酒店。</li><li>厦门酒店淡旺季差别很大，不要因为淡季来过很便宜就以为全年都是这样的价格(120-2000元不等)</li><li>厦门的酒店都需要预定，否则有可能因为后面的客人的预定而不能让你续住。所以来厦门之前建议预定好房间.特别是晚上临时找住处会很被动。</li></ol><p>总之，酒店一定得提前预定！ 网上有很多推荐住<code>曾厝垵</code>民宿的，说是曾厝垵交通很方便 PS 曾厝垵 应该是属于村庄级别的<br>美团上看了下住宿标准 1-200 的有很多</p><h2 id="交通"><a href="#交通" class="headerlink" title="交通"></a>交通</h2>    <div class="gallery-item" style="background-image: url('/images/pasted-49.png');background-size: contain;" data-title="起航-周日下午" data-url="/images/pasted-49.png">      <div class="gallery-item__title">        起航-周日下午      </div>    </div>      <div class="gallery-item" style="background-image: url('/images/pasted-50.png');background-size: contain;" data-title="返航-周五" data-url="/images/pasted-50.png">      <div class="gallery-item__title">        返航-周五      </div>    </div>  <h2 id="天气和地图"><a href="#天气和地图" class="headerlink" title="天气和地图"></a>天气和地图</h2><p><img src="/images/pasted-47.png" alt="天气"><br><img src="/images/pasted-48.png" alt="地图"></p><h2 id="美食"><a href="#美食" class="headerlink" title="美食"></a>美食</h2><p>●厦门著名小吃海蛎煎、竹笋冻、沙茶面、烧肉粽、五香条、花生汤、等人均30元左右 （推荐几家店面:乌糖沙茶面、黄则和花生汤 店、唐宴.老厦门私房菜）</p><p>●姜母鸭、扇贝、烤生、鱿鱼街边小吃等 人 均25元（在厦门著名的中山路就可以探索到 不少厦门正宗的小吃）</p><p>●当仁不让的，海鲜大排档一定有，这个根据地理位置不同价格也是不一样的 平均价格在150元/人（同样推荐几家价格公道海鲜新鲜卫生的店:小眼睛大排档、最壹号海鲜大排档、来嘉海鲜酱油水、南志坊海鲜大排档、天杰福海鲜排挡）</p><h2 id="关于雨天的建议"><a href="#关于雨天的建议" class="headerlink" title="关于雨天的建议"></a>关于雨天的建议</h2><blockquote><p>雨中看风景，相信是别有一番滋味吧。当然如果雨太大了，可以玩一些室内景点，雨小了，可以玩一些室外景点，如此结合，相信也会有十分不错的旅游体验了。<br>鼓浪屿，如果雨太大了不太建议上岛，很不方便，上面基本全部靠步行，可以等雨小的时候再去玩。<br>厦门科技馆，室内游玩场所，不管外面天气是艳阳高照还是大雨倾盆，都雷打不动的好玩。里面很多游玩项目，益智又有趣，很多特别的体验很有意思，比如地震小屋体验7.8级地震、磁电舞台体验万伏高压的电闪雷鸣、镜子迷宫挑战智慧和勇气，不仅适合孩子也很适合贪玩的大人。<br>环岛路，雨小的时候可以去逛逛，不过大抵只能看看海了，像海边骑行等都不太适合，不过可以来场雨中木栈道慢走之旅。<br>厦门大学，雨天逛校园，别有一份风情。厦大很多风格漂亮的教学楼都是避雨的好场所，还有芙蓉隧道都能避雨，还能慢慢逛逛，也是比较适合雨中漫步的。</p></blockquote><h2 id="景点简介-篇幅较长："><a href="#景点简介-篇幅较长：" class="headerlink" title="景点简介-篇幅较长："></a>景点简介-篇幅较长：</h2><ol><li><p>厦门园林植物园</p><p> 厦门园林植物园俗称“万石植物园”，是一座围绕万石岩水库精心设计的植物园林。园内栽培了6000多种热带、亚热带植物。其中雨林世界和沙生植物区特别值得一看，雨林世界雾气朦胧，加上美丽的热带雨林景观，犹如仙境。沙生植物区的网红仙人掌是必拍照的地方。除了看植物外，园内还汇集了石刻、湖泊、草坪、寺庙等景观，新碑林的最高点可俯瞰半个厦门岛。<br><img src="/images/pasted-58.png" alt="园林植物园"></p></li><li><p>菽庄花园（鼓浪屿岛内）</p><p> 菽庄花园建于1913年，以台湾富商林尔嘉的字“叔臧”的谐音命名，分为补山园和藏海园两部分。补山园主要景观是假山，即十二洞天，共有12个洞室，镶嵌了十二生肖于各个洞口。藏海园之所以叫藏海，是因为只有当转出月洞门，大海才会跃然眼前，四十四桥是最佳观海点。菽庄花园听涛轩内的钢琴博物馆是一大亮点，馆内每半小时会有用专门的钢琴即兴演出，值得一听。<br> <img src="/images/pasted-57.png" alt="菽庄花园"></p></li><li><p>日光岩（鼓浪屿岛内）</p><p>日光岩是鼓浪屿的最高峰，岩顶有一个小的观景台，站在这里可以把整个鼓浪屿尽收眼底，岩上奇石众多，数目葱郁，拥有“一片瓦”、“鹭江龙窟”、“古避暑洞”、等胜景。<br> <img src="/images/pasted-53.png" alt="日光岩"></p></li><li><p>芙蓉隧道（厦门大学旁边）</p><p> 芙蓉隧道位于芙蓉餐厅旁，被称作“最文艺的隧道”，全长1.10公里，是中国最长的涂鸦隧道。隧道内的涂鸦，都是厦大学子一笔一画绘出的青春岁月，灵感荟萃，精致撼人。最为精华的几个涂鸦有“我爱你，再见”、“星空”、“海贼王-致未来”等，是诸多游客必打卡之地。</p></li><li><p>顶澳仔猫街</p><p> 猫街在厦门大学西村附近，是一条100米长以猫咪为主题的小街，距离厦门大学很近。街道不宽，是一个挺大的上坡路，猫元素的装饰随处可见，非常适合拍照。大多数是猫咪主题的商铺，里面有各类猫主题的趣味商品，这里有海峡两岸唯一的一家猫咪博物馆，也是爱猫人士必打卡的景点。</p></li><li><p>厦大白城沙滩</p><p> <img src="/images/pasted-54.png" alt="白城沙滩"><br> 白城沙滩位于厦门大学南部白城脚下，为演武大桥与胡里山炮台之间的一片美丽的沙滩。 有许多有趣的景致，沙滩上点缀着一只只巨大的鼠标雕塑，半环型天桥犹如巨大的时钟。沙滩上分布着郑成功时代的遗址，融合美丽景色与深厚的文化历史底蕴于一体。这里是厦大学子、厦门市民和游客漫步、游戏、游泳和观赏夕阳的天然休闲公园。</p></li><li><p>胡里山炮台</p><p> 胡里山炮台靠近厦门大学，始建于公元1894年清光绪二十年间，现是全国AAAA级旅游景区。炮台总面积7万多平方米，分为战坪区、兵营区和后山区，内部开砌暗道，弹药库、兵房、官厅等。结构为半地堡式、半城垣式，具有欧洲和我国明清时期的建筑风格，非常漂亮。<br> <img src="/images/pasted-56.png" alt="胡里山炮台"></p></li><li><p>南普陀寺</p><p> 南普陀寺是汉族地区全国佛教重点寺院，如果准备祈福，不妨来这里拜拜。最为出名的是素菜馆两楼的素斋和寺庙的素饼，上面还挂着天下第一素宴的牌匾，人均大约59元。五老山则是南普陀寺的后山，是厦门八大风景区之一，可以顺带爬山游玩。从寺庙走上五老山仅需1小时左右，也能从此路前往厦门植物园。宇周围保留众多名人题刻，寺后崖壁有个很巨大的“佛”字石刻，常有游客来拍照。</p></li></ol><ol start="9"><li><p><strong>环岛路</strong></p><p> 这条全长30.8公里的黄金海岸线，串起了厦门大学、胡里山炮台、曾厝垵、黄厝沙滩等海岸美景，就像一座城市的会客厅<br><img src="/images/pasted-51.png" alt="环岛路"></p></li><li><p><strong>厦门大学</strong></p><p><div style="color:red"><br>周一到周五，厦大校园每天开放时段为12:00-14:00及17:00后，其余时间不接待游客。注意12:00-14:00期间限1000名游客入校（大南门700人，群贤门300人）<br></div><br>参观人员需提前，通过厦大微信公众号“U厦大”进行预约，点击我要预约。<br><br>17:00后无人数限制 。<br>周六日、法定节假日和寒暑假正常对外开放，无人数限制。</p></li></ol><p><img src="/images/pasted-52.png" alt="厦门大学"></p><ol start="11"><li><p><strong>万石植物园</strong></p><p>厦门园林植物园俗称“万石植物园”，夏日可消暑，冬日可看仙人掌，公园人不多，在山顶还可俯瞰海景，很受旅拍欢迎<br><img src="/images/pasted-55.png" alt="万石植物园"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Netty Client实战——高并发连接池方案</title>
      <link href="/12466/"/>
      <url>/12466/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>最近研究了Netty的相关技术，用于实施高并发场景下的消息通信，期间搜集了大量资料，围绕着netty的channel连接池的设计，这个稍微有些复杂的主题，做了大量功课，其中牵扯到蛮多技术点，要想在网上找到相关的又相对完整的参考文章，确实不太容易。在此记录一下实现的方案，用于技术沉淀。</p><p>首先，阅读本文之前需要具备一些基础知识：</p><ol><li>socket通信和长短连接</li><li>知道Netty的执行流程和相关API操作 </li><li>理解什么是TCP半包，了解Netty提供的粘包和拆包解码器<a id="more"></a>在此贴出一些学习过程中遇到的优秀Blog<br><a href="https://netty.io/wiki/user-guide-for-4.x.html" target="_blank" rel="noopener">官方文档</a><br><a href="https://blog.csdn.net/linsongbin1/article/details/77854957" target="_blank" rel="noopener">分隔符解码器处理半包问题</a><br><a href="https://blog.csdn.net/linsongbin1/article/details/77990882?reload" target="_blank" rel="noopener">netty实战-netty client连接池设计</a>(Netty官方新版本中已经实现了简单的连接池，可以学习连接池的设计思想)</li></ol><h1 id="线程模型"><a href="#线程模型" class="headerlink" title="线程模型"></a>线程模型</h1><p>首先，整个系统架构的线程模型如下：</p><p><img src="/images/pasted-46.png" alt="线程模型"></p><h1 id="同步通信机制"><a href="#同步通信机制" class="headerlink" title="同步通信机制"></a>同步通信机制</h1><p>其次我们需要关注单线程内的同步请求和响应<br>抛出问题：<br>Q1：如何实现基于Netty的“请求-响应”同步通信机制</p><blockquote><p>Netty提供了异步IO和同步IO的统一实现，但是我们的需求其实和IO的同步异步并无关系。我们的关键是要实现请求-响应这种典型的一问一答交互方式。用于实现微服务之间的调用和返回结果获取，要实现这个需求，需要解决两个问题：<br>a. 请求和响应的正确匹配。<br>当服务端返回响应结果的时候，怎么和客户端的请求正确匹配起来呢？解决方式：通过客户端唯一的RequestId，服务端返回的响应中需要包含该RequestId，这样客户端就可以通过RequestId来正确匹配请求响应。<br>b. 请求线程和响应线程的通信。<br>因为请求线程会在发出请求后，同步等待服务端的返回。因此，就需要解决，Netty在接受到响应之后，怎么通知请求线程结果。</p></blockquote><p>方案：使用<code>LinkedBlockingQueue</code>阻塞任务队列，使用take()获取相应的返回结果<br>首先需要对每一个请求标识一个全局唯一的标识，下面贴出核心代码：</p><h2 id="NettyChannelPoolHandler-java"><a href="#NettyChannelPoolHandler-java" class="headerlink" title="NettyChannelPoolHandler.java"></a><a name="NettyChannelPoolHandler.java">NettyChannelPoolHandler.java</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChannelTaskThread</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * netty channel池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> NettyClientPool nettyClientPool = NettyClientPool.getInstance();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChannelTaskThread</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">call</span><span class="params">()</span></span>&#123;</span><br><span class="line">         SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmssSSS"</span>);</span><br><span class="line">        <span class="comment">//同一个线程使用同一个全局唯一的随机数，保证从同一个池中获取和释放资源，同时使用改随机数作为Key获取返回值，时间戳+6位随机数</span></span><br><span class="line">        <span class="keyword">long</span> random = Long.valueOf(sdf.format(<span class="keyword">new</span> Date())) * <span class="number">1000000</span> + Math.round(Math.random() * <span class="number">1000000</span>);</span><br><span class="line"></span><br><span class="line">        Channel channel = nettyClientPool.getChannel(random);</span><br><span class="line">        log.debug(<span class="string">"在链接池池中取到的Channel： "</span>+ channel.id());</span><br><span class="line">        UnpooledByteBufAllocator allocator = <span class="keyword">new</span> UnpooledByteBufAllocator(<span class="keyword">false</span>);</span><br><span class="line">        ByteBuf buffer = allocator.buffer(<span class="number">20</span>);</span><br><span class="line"><span class="comment">//使用固定分隔符的半包解码器</span></span><br><span class="line">        String msg = message + DataBusConstant.DELIMITER;</span><br><span class="line">        buffer.writeBytes(msg.getBytes());</span><br><span class="line">        NettyClientHandler tcpClientHandler = channel.pipeline().get(NettyClientHandler.class);</span><br><span class="line">        ChannelId id = channel.id();</span><br><span class="line">        log.info(<span class="string">"SEND SEQNO[&#123;&#125;] MESSAGE AND CHANNEL id [&#123;&#125;]"</span>,random,id);</span><br><span class="line"></span><br><span class="line">        String serverMsg = tcpClientHandler.sendMessage(buffer, channel);</span><br><span class="line">        NettyClientPool.release(channel);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"请求SEQNO["</span>+random+<span class="string">"] "</span>+ serverMsg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NettyClientHandler-java"><a href="#NettyClientHandler-java" class="headerlink" title="NettyClientHandler.java"></a><a name="NettyClientHandler.java">NettyClientHandler.java</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyClientHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用阻塞式LinkedBlockingQueue，对响应结果保存</span></span><br><span class="line"><span class="comment">     * 用于记录通道响应的结果集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Long, LinkedBlockingQueue&lt;String&gt;&gt; RESULT_MAP = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendMessage</span><span class="params">(ByteBuf message,Channel ch)</span> </span>&#123;</span><br><span class="line">        LinkedBlockingQueue&lt;String&gt; linked = <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//获取channel中存储的全局唯一随机值</span></span><br><span class="line">        Long randomId = ch.attr(AttributeKey.&lt;Long&gt;valueOf(DataBusConstant.RANDOM_KEY)).get();</span><br><span class="line">        RESULT_MAP.put(randomId,linked);</span><br><span class="line">        ch.writeAndFlush(message);</span><br><span class="line">        String res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//设置3分钟的获取超时时间或者使用take()--获取不到返回结果一直阻塞</span></span><br><span class="line">            res = RESULT_MAP.get(randomId).poll(<span class="number">3</span>,TimeUnit.MINUTES);</span><br><span class="line">            RESULT_MAP.remove(randomId);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span></span>&#123;</span><br><span class="line">        String message = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(msg <span class="keyword">instanceof</span> String)&#123;</span><br><span class="line">            message = msg.toString();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(msg <span class="keyword">instanceof</span> ByteBuf)&#123;</span><br><span class="line">            message = ((ByteBuf)msg).toString(Charset.defaultCharset());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取channel中存储的全局唯一随机值</span></span><br><span class="line">        Long randomId = ctx.channel().attr(AttributeKey.&lt;Long&gt;valueOf(DataBusConstant.RANDOM_KEY)).get();</span><br><span class="line">        log.info(<span class="string">" READ INFO 服务端返回结果:"</span>+ message);</span><br><span class="line">        LinkedBlockingQueue&lt;String&gt; linked = RESULT_MAP.get(randomId);</span><br><span class="line">        linked.add(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelReadComplete</span><span class="params">(ChannelHandlerContext ctx)</span></span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> active = ctx.channel().isActive();</span><br><span class="line">        log.debug(<span class="string">"[此时通道状态] &#123;&#125;"</span>, active);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="连接池的创建"><a href="#连接池的创建" class="headerlink" title="连接池的创建"></a>连接池的创建</h1><p><strong>2. 官方提供的FixedChannelPool支持固定连接的连接池，但是不支持连接池的动态回收</strong><br>直接贴连接池的创建代码，通道的动态回收结合心跳机制实现：</p><h2 id="NettyClientPool-java"><a href="#NettyClientPool-java" class="headerlink" title="NettyClientPool.java"></a><a name="NettyClientPool.java">NettyClientPool.java</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="comment">//和Spring整合</span></span><br><span class="line"><span class="comment">//@Order(Integer.MAX_VALUE+1)</span></span><br><span class="line"><span class="comment">//@Component</span></span><br><span class="line"><span class="comment">//@Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyClientPool</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * volatile保持线程之间的可见性，连接池的创建是单例，在这里可加可不加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">private</span> <span class="keyword">static</span> NettyClientPool nettyClientPool;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key为目标主机的InetSocketAddress对象，value为目标主机对应的连接池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ChannelPoolMap&lt;InetSocketAddress, FixedChannelPool&gt; poolMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> EventLoopGroup group = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">    <span class="keyword">final</span> Bootstrap strap = <span class="keyword">new</span> Bootstrap();</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Value("$&#123;netty.server.addresses&#125;")</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String addresses = <span class="string">"127.0.0.1:7000"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;InetSocketAddress,FixedChannelPool&gt; pools = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">private</span> <span class="keyword">static</span> List&lt;InetSocketAddress&gt; addressList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">NettyClientPool</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//如果和Spring整合，构造方法内的build方法调用注掉</span></span><br><span class="line">        build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @Bean(initMethod = "build")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> NettyClientPool <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nettyClientPool == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (NettyClientPool.class) &#123;</span><br><span class="line">                <span class="keyword">if</span>(nettyClientPool == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    nettyClientPool = <span class="keyword">new</span> NettyClientPool();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nettyClientPool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">        log.info(<span class="string">"NettyClientPool build......"</span>);</span><br><span class="line">        strap.group(group).channel(NioSocketChannel.class).option(ChannelOption.TCP_NODELAY, <span class="keyword">true</span>)</span><br><span class="line">                .option(ChannelOption.SO_KEEPALIVE, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        poolMap = <span class="keyword">new</span> AbstractChannelPoolMap&lt;InetSocketAddress, FixedChannelPool&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> FixedChannelPool <span class="title">newPool</span><span class="params">(InetSocketAddress key)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> FixedChannelPool(strap.remoteAddress(key), <span class="keyword">new</span> NettyChannelPoolHandler(), DataBusConstant.MAX_CONNECTIONS);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        getInetAddresses(addresses);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (InetSocketAddress address: addressList)&#123;</span><br><span class="line">            pools.put(address,poolMap.get(address));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;功能描述:</span></span><br><span class="line"><span class="comment">     * 根据随机数取出随机的server对应pool，从pool中取出channel</span></span><br><span class="line"><span class="comment">     *   pool.acquiredChannelCount(); 对应池中的channel数目</span></span><br><span class="line"><span class="comment">     *   连接池的动态扩容： 指定最大连接数为&#123;<span class="doctag">@link</span> Integer.MAX_VALUE&#125;,如果连接池队列中取不到channel，会自动创建channel，默认使用FIFO的获取方式，回收的channel优先被再次get到</span></span><br><span class="line"><span class="comment">     *   SERVER的宕机自动切换: 指定重试次数，get()发生连接异常，则对随机数+1，从下一个池中重新获取,</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *   后期如有必要可优化为：Server注册到注册中心，从注册中心获取连接池对应的address，或者注册到zookeeper中，都需要单独写实现</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     * @方法名称 getChannel</span></span><br><span class="line"><span class="comment">     * @作者 zhangdong</span></span><br><span class="line"><span class="comment">     * @创建时间 2019/4/23 11:39</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> random</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> io.netty.channel.Channel</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Channel <span class="title">getChannel</span> <span class="params">(<span class="keyword">long</span> random)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> retry = <span class="number">0</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//按时间戳取余</span></span><br><span class="line">            Long poolIndex = random % pools.size();</span><br><span class="line">            InetSocketAddress address = addressList.get(poolIndex.intValue());</span><br><span class="line">            FixedChannelPool pool = pools.get(address);</span><br><span class="line">            Future&lt;Channel&gt; future = pool.acquire();</span><br><span class="line">            channel = future.get();</span><br><span class="line">            AttributeKey&lt;Long&gt; randomID = AttributeKey.valueOf(DataBusConstant.RANDOM_KEY);</span><br><span class="line">            channel.attr(randomID).set(random);</span><br><span class="line">            <span class="comment">//如果是因为服务端挂点，连接失败而获取不到channel，则随机数执行+1操作，从下一个池获取</span></span><br><span class="line">        &#125;<span class="keyword">catch</span> (ExecutionException e)&#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">            <span class="comment">//每个池，尝试获取取2次</span></span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(retry &lt; addressList.size() * count)&#123;</span><br><span class="line">                retry ++;</span><br><span class="line">                <span class="keyword">return</span> getChannel( ++ random);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                log.error(<span class="string">"没有可以获取到channel连接的server，server list [&#123;&#125;]"</span>,addressList);</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"没有可以获取到channel连接的server"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> channel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;功能描述:</span></span><br><span class="line"><span class="comment">     *  回收channel进池，需要保证随机值和getChannel获取到的随机值是同一个，才能从同一个pool中释放资源</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     * @方法名称 release</span></span><br><span class="line"><span class="comment">     * @作者 zhangdong</span></span><br><span class="line"><span class="comment">     * @创建时间 2019/4/23 11:16</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ch</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Channel ch)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> random = ch.attr(AttributeKey.&lt;Long&gt;valueOf(DataBusConstant.RANDOM_KEY)).get();</span><br><span class="line">        ch.flush();</span><br><span class="line">        Long poolIndex = random % pools.size();</span><br><span class="line">        pools.get(addressList.get(poolIndex.intValue())).release(ch);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取线程池的hash值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ch</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getPoolHash</span><span class="params">(Channel ch)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> random = ch.attr(AttributeKey.&lt;Long&gt;valueOf(DataBusConstant.RANDOM_KEY)).get();</span><br><span class="line">        Long poolIndex = random % pools.size();</span><br><span class="line">        <span class="keyword">return</span> System.identityHashCode(pools.get(addressList.get(poolIndex.intValue())));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;功能描述:</span></span><br><span class="line"><span class="comment">     * 获取服务端server列表，每个server对应一个pool</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     * @方法名称 getInetAddredd</span></span><br><span class="line"><span class="comment">     * @作者 zhangdong</span></span><br><span class="line"><span class="comment">     * @创建时间 2019/4/23 11:17</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> addresses</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getInetAddresses</span><span class="params">(String addresses)</span></span>&#123;</span><br><span class="line">        addressList = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(addresses))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"address列表为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        String[] splits = addresses.split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">for</span> (String address: splits)&#123;</span><br><span class="line">            String[] split = address.split(<span class="string">":"</span>);</span><br><span class="line">            <span class="keyword">if</span>(split.length==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"["</span> + address + <span class="string">"]不符合IP:PORT格式"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            addressList.add(<span class="keyword">new</span> InetSocketAddress(split[<span class="number">0</span>], Integer.parseInt(split[<span class="number">1</span>])));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NettyChannelPoolHandler-java-1"><a href="#NettyChannelPoolHandler-java-1" class="headerlink" title="NettyChannelPoolHandler.java"></a><a name="NettyChannelPoolHandler.java">NettyChannelPoolHandler.java</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyChannelPoolHandler</span> <span class="keyword">implements</span> <span class="title">ChannelPoolHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> ByteBuf byteBuf = Unpooled.copiedBuffer(DataBusConstant.DELIMITER.getBytes());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelReleased</span><span class="params">(Channel ch)</span></span>&#123;</span><br><span class="line">        ch.writeAndFlush(Unpooled.EMPTY_BUFFER);</span><br><span class="line">        log.info(<span class="string">"|--&gt;回收Channel. Channel ID: "</span> + ch.id());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelAcquired</span><span class="params">(Channel ch)</span></span>&#123;</span><br><span class="line">        log.info(<span class="string">"|--&gt;获取Channel. Channel ID: "</span> + ch.id());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelCreated</span><span class="params">(Channel ch)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">"|--&gt;创建Channel. Channel ID: "</span> + ch.id()</span><br><span class="line">                 +<span class="string">"\r\n|--&gt;创建Channel. Channel REAL HASH: "</span> + System.identityHashCode(ch));</span><br><span class="line">        SocketChannel channel = (SocketChannel) ch;</span><br><span class="line">        channel.config().setKeepAlive(<span class="keyword">true</span>);</span><br><span class="line">        channel.config().setTcpNoDelay(<span class="keyword">true</span>);</span><br><span class="line">        channel.pipeline()</span><br><span class="line">                <span class="comment">//开启Netty自带的心跳处理器，每5秒发送一次心跳</span></span><br><span class="line">                .addLast(<span class="keyword">new</span> IdleStateHandler(<span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>,TimeUnit.SECONDS))</span><br><span class="line">                .addLast(<span class="keyword">new</span> DelimiterBasedFrameDecoder(Integer.MAX_VALUE,byteBuf))</span><br><span class="line">                .addLast(<span class="keyword">new</span> NettyClientHandler());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="通道的动态回收"><a href="#通道的动态回收" class="headerlink" title="通道的动态回收"></a>通道的动态回收</h1><p><strong>3. 心跳机制的实现保证心跳不会失活，丢失心跳包的通道的管理,参考上面的 <a href="#NettyChannelPoolHandler.java">NettyChannelPoolHandler</a> 处理器</strong><br>动态通道回收，在 <a href="#NettyClientHandler.java">NettyClientHandler</a>  类中实现<code>userEventTriggered</code>方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">static</span> Map&lt;Integer,Set&lt;Channel&gt;&gt; coreChannel = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">userEventTriggered</span><span class="params">(ChannelHandlerContext ctx, Object evt)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    log.info(<span class="string">"[客户端心跳监测发送] 通道编号：&#123;&#125;"</span>, ctx.channel().id());</span><br><span class="line">    Channel channel = ctx.channel();</span><br><span class="line">    <span class="keyword">if</span> (evt <span class="keyword">instanceof</span> IdleStateEvent) &#123;</span><br><span class="line">        <span class="comment">//当客户端开始发送心跳检测时。说明没有业务请求过来，释放通道数为设定的 CORE_CONNECTIONS</span></span><br><span class="line">        <span class="keyword">if</span>(channel.isActive())&#123;</span><br><span class="line">            <span class="comment">//使用pool的hash值作为Key，维护 CORE_CONNECTIONS个数个通道，多余的关闭</span></span><br><span class="line">            <span class="keyword">int</span> poolHash = NettyClientPool.getPoolHash(channel);</span><br><span class="line">            Set&lt;Channel&gt; channels = coreChannel.get(poolHash);</span><br><span class="line">            channels = channels == <span class="keyword">null</span> ? <span class="keyword">new</span> HashSet&lt;&gt;(DataBusConstant.CORE_CONNECTIONS) : channels;</span><br><span class="line">            channels.add(channel);</span><br><span class="line">            <span class="keyword">if</span>(channels.stream().filter(x-&gt; x.isActive()).count() &gt; DataBusConstant.CORE_CONNECTIONS)&#123;</span><br><span class="line">                log.info(<span class="string">"关闭 CORE_CONNECTIONS 范围之外的通道：&#123;&#125;"</span>,channel.id());</span><br><span class="line">                channels.remove(channel);</span><br><span class="line">                channel.close();</span><br><span class="line">            &#125;</span><br><span class="line">            coreChannel.put(poolHash,channels);</span><br><span class="line">        &#125;</span><br><span class="line">        String heartBeat = DataBusConstant.HEART_BEAT + DataBusConstant.DELIMITER;</span><br><span class="line">        ByteBuf byteBuf = Unpooled.copiedBuffer(heartBeat.getBytes());</span><br><span class="line">        channel.writeAndFlush(byteBuf);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.userEventTriggered(ctx, evt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="辅助类"><a href="#辅助类" class="headerlink" title="辅助类"></a>辅助类</h1><h2 id="常量类"><a href="#常量类" class="headerlink" title="常量类"></a>常量类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBusConstant</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DELIMITER = <span class="string">"%#_#%"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEART_BEAT = <span class="string">"ping-pong-ping-pong"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最大连接数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_CONNECTIONS = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 核心链接数，该数目内的通道 在没有业务请求时发送心跳防止失活，超过部分的通道close掉</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CORE_CONNECTIONS = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 同一个线程使用同一个全局唯一的随机数，保证从同一个池中获取和释放资源，同时使用改随机数作为Key获取返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String RANDOM_KEY = <span class="string">"randomID"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 服务端丢失心跳次数，达到该次数，则关闭通道，默认3次</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOOS_HEART_BEAT_COUNT = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="任务连接池"><a href="#任务连接池" class="headerlink" title="任务连接池"></a>任务连接池</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyTaskPool</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 线程池线程数量,对应CachedThreadPoolExecutor</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CORE_POLL_SIZE = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_POLL_SIZE = Integer.MAX_VALUE;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//手动创建线程池</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadPoolExecutor threadPool = <span class="keyword">new</span> ThreadPoolExecutor(</span><br><span class="line">            CORE_POLL_SIZE,</span><br><span class="line">            MAX_POLL_SIZE,</span><br><span class="line">            <span class="number">3</span>,</span><br><span class="line">            TimeUnit.MINUTES,</span><br><span class="line">            <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;(),</span><br><span class="line">            <span class="keyword">new</span> ThreadPoolExecutor.DiscardOldestPolicy());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">submitTask</span><span class="params">(String message)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//单个任务在线程池内分配单个线程，用于同步等待封装的返回结果</span></span><br><span class="line">        Future&lt;String&gt; submit = threadPool.submit(<span class="keyword">new</span> ChannelTaskThread(message));</span><br><span class="line">        String response = submit.get();</span><br><span class="line">        log.info(<span class="string">"\n\t submitTask 返回的 Response：  \r\n\t\t[ "</span>+ response +<span class="string">" ]\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPool</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//模拟多线程客户端，提交任务，</span></span><br><span class="line">            <span class="keyword">new</span> Thread(()-&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">                       String longMsgBody = j + <span class="string">"中华人民共和国,中华人民共和国,中华人民共和国,中华人民共和国,中华人民共和国"</span> + j;</span><br><span class="line">                        NettyTaskPool.submitTask(longMsgBody);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>server端省略</p>]]></content>
      
      
      <categories>
          
          <category> netty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 连接池 </tag>
            
            <tag> netty </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JMeter测试案例[加密登录、post请求]</title>
      <link href="/43128/"/>
      <url>/43128/</url>
      
        <content type="html"><![CDATA[<blockquote><p>近期项目上做了接口的平台迁移，为了测试迁移前后的性能损耗，以及socket长短连接的响应耗时时长，想测一下相关接口的性能级别<br>百度了一下相关测试软件，JMeter的文档比较多，使用率比较高，就跟着网上教程现学现卖了一下，做个小记录，方便以后翻阅</p></blockquote><h1 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h1><ol><li>官方网站：<a href="http://jmeter.apache.org/" target="_blank" rel="noopener">http://jmeter.apache.org/</a> 在这里我下载的是最新版5.0的zip包</li><li>5.0版本依赖JDK8以上的环境，配置JAVA_HOME</li><li>解压后， 运行  “bin/jmeter.bat”如果运行不了，请检查JDK是否正常配置，javaw.exe是否在环境变量中</li><li>Jmeter是支持中文的， 启动Jmeter 后， 点击 Options -&gt; Choose Language  来选择语言，如果低版本的找不到选择语音的选项，可以看下bin/jmeter.properties 在36行左右有语言配置设置<code>language=zh_CN</code><a id="more"></a></li></ol><h1 id="测试场景"><a href="#测试场景" class="headerlink" title="测试场景"></a>测试场景</h1><blockquote><p>首先明确要测试的接口场景</p></blockquote><ol><li>平台下登陆做了随机值+对称公钥加密做MD5的方式进行密码认证,要考虑登陆问题</li><li>接口请求是POST请求，需要设置传参的方式和请求头关于报文的格式</li><li>一个页面有多个接口调用，需要出整体的性能级别报告</li></ol><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="创建线程组"><a href="#创建线程组" class="headerlink" title="创建线程组"></a>创建线程组</h2><p>首先进入应用界面，新建线程组<br>右键添加线程组<br><img src="/images/pasted-36.png" alt="添加线程组"><br>线程组配置如下，先设置1个线程数，1次循环，调试单个接口能正常调用<br><img src="/images/pasted-37.png" alt="添加线程组"></p><blockquote><p>相关参数释义：<br> 线程数：虚拟用户数，一个虚拟用户占用一个进程或线程。设置多少虚拟用户数在这里也就是设置多少个线程数<br>Ramp-Up Period(in seconds)：设置的虚拟用户数需要多长时间全部启动。如果线程数为10 ，Ramp-Up Period为100，那么就是100秒钟内启动10个线程。每一个线程都会在上一个线程启动10秒钟后才开始运行；设置为0则表示同时启动（注：Ramp-Up Period(in secods)不能设置太小的数值，否则会一开始就给服务器过大的压力；也不能设置太大的数值，否则第一个线程已经执行完了，最后一个还没启动的情况）刚开始Ramp-Up值可以等于总线程数，之后再作调整<br>循环次数：每个线程发送请求的次数，如果线程数为20 ，循环次数为100 ，那么每个线程发送100次请求。总请求数为20*100=2000 。如果勾选了“永远”，那么所有线程会一直发送请求，一到选择停止运行脚本。<br>启动时间：线程运行的起始时间<br>结束时间：线程运行的结束时间<br>持续时间：设置了持续时间则启动时间会失效<br>启动延迟：设置了启动延迟则结束时间会失效<br>线程数1000循环1次与线程数10循环100次的区别：线程数1000循环1次可以选择并发；线程数10循环100次是类似于长时间施加压力</p></blockquote><h2 id="登陆验证"><a href="#登陆验证" class="headerlink" title="登陆验证"></a>登陆验证</h2><blockquote><p>首先明确javaWeb的项目工程，对于身份的登陆状态一般都是使用获取Session方式来判断是否登陆，使用用户名密码的形式因为密码做了加密，所以我们这里的解决方案为，使用Google浏览器做个登陆，然后在浏览器获取SessionID，使用sessionID模拟已经登陆的状态</p></blockquote><ol><li>首先登陆，</li><li>F12，打开Google浏览器的调试界面，打开network选项卡，随便点击一个按钮，发起接口请求</li><li>打开请求详情，Request Headers就是我们要的内容<br><img src="/images/pasted-39.png" alt="Google调试页"></li><li>右键线程组添加HTTP信息请求头管理器<br><img src="/images/pasted-40.png" alt="添加HTTP信息请求头管理器"></li><li>将请求头内容相关粘贴到配置中<br><img src="/images/pasted-41.png" alt="upload successful"></li></ol><h2 id="创建HTTP请求"><a href="#创建HTTP请求" class="headerlink" title="创建HTTP请求"></a>创建HTTP请求</h2><p>在线程组内添加HTTP请求<br><img src="/images/pasted-38.png" alt="创建HTTP请求"><br>配置HTTP请求参数</p><blockquote><p>注: json格式的报文，必须在<code>消息体数据</code>选项卡内填写报文，不能再参数内填写</p></blockquote><p><img src="/images/pasted-42.png" alt="配置HTTP请求参数"></p><h2 id="添加监听器"><a href="#添加监听器" class="headerlink" title="添加监听器"></a>添加监听器</h2><p>在整个测试计划中，添加相关结果类的监听器<br><img src="/images/pasted-43.png" alt="添加监听器"></p><p>启动任务，查看相关报告</p><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><p>使用5个线程模拟并发，循环5次，对30多个接口进行同步请求：<br><img src="/images/pasted-45.png" alt="汇总报告"><br><img src="/images/pasted-44.png" alt="响应时间图"></p><blockquote><p>参考：<br><a href="https://blog.csdn.net/huashao0602/article/details/72845378" target="_blank" rel="noopener">https://blog.csdn.net/huashao0602/article/details/72845378</a><br><a href="https://www.cnblogs.com/test002/p/8034154.html" target="_blank" rel="noopener">https://www.cnblogs.com/test002/p/8034154.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JMeter </tag>
            
            <tag> 性能测试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDP集群运维-磁盘扩容和节点扩展</title>
      <link href="/7840/"/>
      <url>/7840/</url>
      
        <content type="html"><![CDATA[<h1 id="一、资源查看"><a href="#一、资源查看" class="headerlink" title="一、资源查看"></a>一、资源查看</h1><p>公司的测试集群是window Server上用vmvare做的虚拟化节点，由于测试HDP集群的资源分配过少，导致集群的响应速度慢，近期还提示了磁盘告警，故需要从新规划一下HDP的节点以及资源的分配</p><p><img src="/images/pasted-12.png" alt="upload successful"></p><h2 id="查看原节点的磁盘情况"><a href="#查看原节点的磁盘情况" class="headerlink" title="查看原节点的磁盘情况"></a>查看原节点的磁盘情况</h2><p>使用fdisk -l 命令可以看到，该节点一共100G的磁盘，/dev/sda2为100G的逻辑卷，其中1个逻辑分区50G挂载到根目录/，一个挂载到家目录/home</p><p><img src="/images/pasted-13.png" alt="upload successful"></p><a id="more"></a><p><img src="/images/pasted-14.png" alt="upload successful"></p><p><img src="/images/pasted-15.png" alt="upload successful"></p><h1 id="二、资源分配规划"><a href="#二、资源分配规划" class="headerlink" title="二、资源分配规划"></a>二、资源分配规划</h1><h2 id="原分配方案"><a href="#原分配方案" class="headerlink" title="原分配方案"></a>原分配方案</h2><p>其中hdp4节点创建后，却没有加入集群中，资源闲置</p><table><thead><tr><th>节点</th><th>内存</th><th>CPU</th><th>硬盘</th><th>IP</th></tr></thead><tbody><tr><td>windowServer实体机</td><td>128G</td><td>40Core</td><td>3T</td><td>192.168.10.164</td></tr><tr><td>hdp1</td><td>8G</td><td>4 Core</td><td>100G</td><td>192.168.10.151</td></tr><tr><td>hdp2</td><td>8G</td><td>4 Core</td><td>100G</td><td>192.168.10.152</td></tr><tr><td>hdp3</td><td>8G</td><td>4 Core</td><td>100G</td><td>192.168.10.153</td></tr><tr><td>hdp4</td><td>8G</td><td>4 Core</td><td>100G</td><td>192.168.10.154</td></tr></tbody></table><h2 id="资源分配规划方案"><a href="#资源分配规划方案" class="headerlink" title="资源分配规划方案"></a>资源分配规划方案</h2><blockquote><p>由于预装的hdp集群采用的centos6.4  32位的操作系统，再虚拟化机器中，不能超过8G的内存使用量，所以内存分配暂时只能是使用8G内存，<br>为了达到资源利用率更高，集群速度更快，将集群横向扩展到9节点，其中6个节点提供Hadoop及相关大数据组件服务，<br>考虑到发挥kafaka集群的高吞吐、IO，高性能的特性，将其中3个节点隔离开来作为kafka集群单独使用。</p></blockquote><table><thead><tr><th>节点</th><th>内存</th><th>CPU</th><th>硬盘</th><th>IP</th></tr></thead><tbody><tr><td>windowServer实体机</td><td>128G</td><td>40Core</td><td>3T</td><td>192.168.10.164</td></tr><tr><td>hdp1</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.151</td></tr><tr><td>hdp2</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.152</td></tr><tr><td>hdp3</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.153</td></tr><tr><td>hdp4</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.154</td></tr><tr><td>hdp5</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.155</td></tr><tr><td>hdp6</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.156</td></tr><tr><td>hdp7</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.157</td></tr><tr><td>hdp8</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.158</td></tr><tr><td>hdp9</td><td>8G</td><td>4 Core</td><td>200G</td><td>192.168.10.159</td></tr></tbody></table><h2 id="角色分配预计效果"><a href="#角色分配预计效果" class="headerlink" title="角色分配预计效果"></a>角色分配预计效果</h2><table><thead><tr><th>组件名称</th><th>服务名称</th><th>节点分布</th></tr></thead><tbody><tr><td>Hadoop</td><td>Active namenode</td><td>hdp1</td></tr><tr><td>Hadoop</td><td>StandBy namenode</td><td>hdp2</td></tr><tr><td>Yarn</td><td>ResourceManager</td><td>hdp1</td></tr><tr><td>Yarn</td><td>NodeManager</td><td>hdp1-6</td></tr><tr><td>Tez</td><td></td><td></td></tr><tr><td>hdp1-6</td><td></td><td></td></tr><tr><td>Hive</td><td>MataStrore</td><td>hdp1</td></tr><tr><td>HBase</td><td>HMaster</td><td>Hdp1-2</td></tr><tr><td>Hbase</td><td>HRegionServer</td><td>Hdp1-6</td></tr><tr><td>Zookeeper</td><td>Zookeeper-Server</td><td>Hdp1-3</td></tr><tr><td>Kafka</td><td>Kafka-Server</td><td>Hdp7-9</td></tr><tr><td>Hawq</td><td>Master</td><td>hdp3</td></tr><tr><td></td><td>StandBy Master</td><td>hdp2</td></tr><tr><td></td><td>Segment</td><td>hdp1-6</td></tr><tr><td></td><td>PXF</td><td>hdp1-6</td></tr></tbody></table><h1 id="三、磁盘扩容步骤"><a href="#三、磁盘扩容步骤" class="headerlink" title="三、磁盘扩容步骤"></a>三、磁盘扩容步骤</h1><h2 id="1-虚拟机磁盘扩容"><a href="#1-虚拟机磁盘扩容" class="headerlink" title="1. 虚拟机磁盘扩容"></a>1. 虚拟机磁盘扩容</h2><p><img src="/images/pasted-16.png" alt="upload successful"></p><h2 id="2-确认磁盘状况"><a href="#2-确认磁盘状况" class="headerlink" title="2.确认磁盘状况"></a>2.确认磁盘状况</h2><p>可以看出/dev/sda 已经变成200G，df磁盘情况并没有变化</p><p><img src="/images/pasted-17.png" alt="upload successful"></p><p><img src="/images/pasted-18.png" alt="upload successful"></p><h2 id="3-扩展分区"><a href="#3-扩展分区" class="headerlink" title="3.扩展分区"></a>3.扩展分区</h2><p><img src="/images/pasted-19.png" alt="upload successful"></p><p><img src="/images/pasted-20.png" alt="upload successful"></p><p><img src="/images/pasted-21.png" alt="upload successful"></p><p>已经有sda1和sda2了，需要扩展的下一个分区ID为3，输入3</p><p><img src="/images/pasted-22.png" alt="upload successful"></p><p>一路空格使用默认配置，将剩余的所有空间都分配给sda3分区</p><p><img src="/images/pasted-23.png" alt="upload successful"></p><p>更改分区为逻辑卷</p><p><img src="/images/pasted-24.png" alt="upload successful"></p><p>更改过后输入w保存</p><p><img src="/images/pasted-25.png" alt="upload successful"></p><p>再次输入fdisk -l可以看到多一个逻辑卷</p><p><img src="/images/pasted-26.png" alt="upload successful"></p><p>执行 partprobe或者重启</p><blockquote><p>执行 partprobe命令用于将磁盘分区表变化信息通知内核，并请求操作系统重新加载分区表，可以避免必须重新启动的问题，这里我们reboot一下。</p></blockquote><p>附：PV,VG,LV的关系和操作</p><p><img src="/images/pasted-27.png" alt="upload successful"></p><p>扩展vg</p><p><img src="/images/pasted-28.png" alt="upload successful"></p><p>扩展lv<br>可以将此lv全部添加或者部分添加，我们这里全部添加到根目录下 vg_hdp1-lv_root</p><p><img src="/images/pasted-29.png" alt="upload successful"></p><p><img src="/images/pasted-30.png" alt="upload successful"></p><p>此时看到df状态还没有变化</p><p><img src="/images/pasted-31.png" alt="upload successful"></p><p>动态扩容<br>使用xfs_growfs可以将xfs文件系统进行online方式的扩展，它会将data block进行调整。</p><p>附：动态扩容分区的相关操作</p><p><img src="/images/pasted-32.png" alt="upload successful"></p><p>使用df -hT可以看到分区是ext4文件系统</p><p><img src="/images/pasted-33.png" alt="upload successful"></p><p>执行命令：</p><p><img src="/images/pasted-34.png" alt="upload successful"></p><p>验证扩容之后的空间：根目录已经增大到150G</p><p><img src="/images/pasted-35.png" alt="upload successful"></p><p>剩下的将hdp1-3三个节点执行同样的流程扩容即可</p>]]></content>
      
      
      <categories>
          
          <category> 集群运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> hdp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hawq用户表的批量授权</title>
      <link href="/35840/"/>
      <url>/35840/</url>
      
        <content type="html"><![CDATA[<blockquote><p>近期公司有新入职小伙伴不小心在生产的用户上直接跑了ETL脚本，对于hawq的用户权限方面控制需要加强，查阅官方文档，发现hawq在用户的权限管理方面做得不是那么那么好，不能对库级别、或者schema级别的表做只读权限，只能单张表授权控制。<br>    没办法，那就写shell脚本统一控制吧。</p></blockquote><h1 id="新建角色"><a href="#新建角色" class="headerlink" title="新建角色"></a>新建角色</h1><p>创建访客角色Guest,只具有登陆权限<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">ROLE</span> guest <span class="keyword">WITH</span> LOGIN;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">ROLE</span> guest <span class="keyword">WITH</span> <span class="keyword">PASSWORD</span> <span class="string">'*********'</span>;</span><br></pre></td></tr></table></figure></p><p>执行<code>select pg_reload_conf()</code>重新加载hawq配置<br><a id="more"></a></p><h1 id="授权访问"><a href="#授权访问" class="headerlink" title="授权访问"></a>授权访问</h1><p>配置pg_hba.conf，使外部client使用该用户登陆,并设置为<code>password</code>/<code>md5</code>的登陆方式</p><p><img src="/images/pasted-9.png" alt="pg_hba.conf配置"></p><p>测试连接是否成功</p><p><img src="/images/pasted-10.png" alt="测试连接"></p><h1 id="根据元数据信息表编写脚本"><a href="#根据元数据信息表编写脚本" class="headerlink" title="根据元数据信息表编写脚本"></a>根据元数据信息表编写脚本</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询所有非系统库的database名称</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.datname</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"><span class="keyword">SELECT</span> d.datname, d.oid, pg_get_userbyid(d.datdba) <span class="keyword">AS</span> owner, </span><br><span class="line">shobj_description(d.oid, <span class="string">'pg_database'</span>) <span class="keyword">AS</span> <span class="keyword">comment</span>, </span><br><span class="line">t.spcname, d.datacl, d.datlastsysoid, d.encoding, pg_encoding_to_char(d.encoding) <span class="keyword">AS</span> encodingname </span><br><span class="line"><span class="keyword">FROM</span> pg_database d <span class="keyword">LEFT</span> </span><br><span class="line"><span class="keyword">JOIN</span> pg_tablespace t </span><br><span class="line"><span class="keyword">ON</span> d.dattablespace=t.oid</span><br><span class="line">) ss </span><br><span class="line"><span class="keyword">WHERE</span> ss.datname <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'hcatalog'</span>,<span class="string">'template1'</span>,<span class="string">'template0'</span>,<span class="string">'postgres'</span>,<span class="string">'gpadmin'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询所有非系统schema</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.Name <span class="keyword">from</span> (</span><br><span class="line"><span class="keyword">SELECT</span> n.nspname <span class="keyword">AS</span> <span class="keyword">Name</span>,pg_catalog.pg_get_userbyid(n.nspowner) <span class="keyword">AS</span> Owner</span><br><span class="line"><span class="keyword">FROM</span> pg_catalog.pg_namespace n</span><br><span class="line"><span class="keyword">WHERE</span> (n.nspname !~ <span class="string">'^pg_temp_'</span> <span class="keyword">OR</span> n.nspname = (pg_catalog.current_schemas(<span class="literal">true</span>))[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span></span><br><span class="line">) ss</span><br><span class="line"><span class="keyword">WHERE</span> ss.Name !=<span class="string">'hawq_toolkit'</span> <span class="keyword">and</span> ss.Name !=<span class="string">'information_schema'</span> <span class="keyword">and</span> ss.Name!~ <span class="string">'^pg_'</span> <span class="keyword">and</span> ss.Owner!=<span class="string">'guest'</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询当前库所有schema下的用户表和用户视图</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.schema || <span class="string">'.'</span> || ss.name <span class="keyword">as</span> tableName,owner,<span class="keyword">type</span></span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> n.nspname <span class="keyword">as</span> <span class="keyword">schema</span>,</span><br><span class="line">    c.relname <span class="keyword">as</span> <span class="keyword">name</span>,</span><br><span class="line">    <span class="keyword">CASE</span> c.relkind <span class="keyword">WHEN</span> <span class="string">'r'</span> <span class="keyword">THEN</span> <span class="string">'table'</span> <span class="keyword">WHEN</span> <span class="string">'v'</span> <span class="keyword">THEN</span> <span class="string">'view'</span> <span class="keyword">WHEN</span> <span class="string">'i'</span> <span class="keyword">THEN</span> <span class="string">'index'</span> <span class="keyword">WHEN</span> <span class="string">'S'</span> <span class="keyword">THEN</span> <span class="string">'sequence'</span> <span class="keyword">WHEN</span> <span class="string">'s'</span> <span class="keyword">THEN</span> <span class="string">'special'</span> <span class="keyword">END</span> <span class="keyword">as</span> <span class="keyword">type</span>,</span><br><span class="line">    pg_catalog.pg_get_userbyid(c.relowner) <span class="keyword">as</span> owner</span><br><span class="line">    <span class="keyword">FROM</span> pg_catalog.pg_class c</span><br><span class="line">        <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> pg_catalog.pg_namespace n <span class="keyword">ON</span> n.oid = c.relnamespace</span><br><span class="line">    <span class="keyword">WHERE</span> c.relkind <span class="keyword">IN</span> (<span class="string">'r'</span>,<span class="string">'v'</span>,<span class="string">'S'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">AND</span> c.relstorage <span class="keyword">IN</span> (<span class="string">'h'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'p'</span>,<span class="string">'x'</span>,<span class="string">'f'</span>,<span class="string">'v'</span>,<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">AND</span> n.nspname &lt;&gt; <span class="string">'pg_catalog'</span></span><br><span class="line">        <span class="keyword">AND</span> n.nspname &lt;&gt; <span class="string">'information_schema'</span></span><br><span class="line">        <span class="keyword">AND</span> n.nspname &lt;&gt; <span class="string">'hawq_toolkit'</span></span><br><span class="line">        <span class="keyword">AND</span> n.nspname !~ <span class="string">'^pg_toast'</span></span><br><span class="line">    <span class="comment">--AND pg_catalog.pg_table_is_visible(c.oid)  --当前模式</span></span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>,<span class="number">2</span></span><br><span class="line">) ss</span><br><span class="line"><span class="keyword">WHERE</span> ss.owner!=<span class="string">'guest'</span>;</span><br><span class="line"><span class="comment">-- 排除掉已经授权过的表</span></span><br><span class="line">and ss.schema || '.' || ss.name not in (</span><br><span class="line"><span class="keyword">select</span> table_schema|| <span class="string">'.'</span> || table_name <span class="keyword">as</span> tableName <span class="keyword">from</span> information_schema.role_table_grants <span class="keyword">where</span> grantee=<span class="string">'guest'</span> <span class="keyword">and</span> privilege_type=<span class="string">'SELECT'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>有了这3个相关元数据信息的SQL，就可以使用shell拼接grant语句进行遍历授权了<br>最终脚本就不放了，功能很容易实现<br>可以使用azkaban配置定时任务，</p><p>调用：<br><img src="/images/pasted-11.png" alt="azkaban调用结果"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hawq </tag>
            
            <tag> 授权 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MySQL错误errorno大全</title>
      <link href="/54530/"/>
      <url>/54530/</url>
      
        <content type="html"><![CDATA[<blockquote><p>网络上搜索到的mysql的出错代码表,出处是某位大佬根据mysql的头文件mysql/include/mysqld_error.h整理而成。<br>为方便查阅，直接转载到本Blog使用，由于追溯不到原作者，网络上转载较多，作者信息不再备注，侵删</p></blockquote><p>0101 属于其他进程的专用标志。<br>0102 标志已经设置,无法关闭。<br>0103 无法再次设置该标志。<br>0104 中断时无法请求专用标志。<br>0105 此标志先前的所有权已终止。<br>0106 请将软盘插入驱动器 %1。<br>0107 后续软盘尚未插入,程序停止。<br>0108 磁盘正在使用或已由其他进程锁定。<br>0109 管道已经结束。<br>0110 系统无法打开指定的设备或文件。<br>0111 文件名太长。<br>0112 磁盘空间不足。<br><a id="more"></a><br>0113 没有其他可用的内部文件标识符。<br>0114 目标内部文件标识符不正确。<br>0117 该应用程序所运行的 IOCTL 调用不正确。<br>0118 校验写入的开关参数值不正确。<br>0119 系统不支持所请求的命令。<br>0120 该系统上不支持此功能。<br>0121 标记已超时。<br>0123 文件名、目录名或卷标语法错误。<br>0124 系统调用层不正确。<br>0125 磁盘没有卷标。<br>0126 找不到指定的模块。<br>0127 找不到指定的过程。<br>0128 没有要等候的子进程。<br>0129 模式下运行。<br>0130 试图使用操作(而非原始磁盘I/O)的已打开磁盘分区的文件句柄。<br>0131 试图将文件指针移至文件开头之前。<br>0132 无法在指定的设备或文件中设置文件指针。<br>0133 对于包含已连接驱动器的驱动器,不能使用 JOIN 或 SUBST 命令。<br>0134 试图在已经连接的驱动器上使用 JOIN 或 SUBST 命令。<br>0135 试图在已经替换的驱动器上使用 JOIN 或 SUBST 命令。<br>0136 系统试图删除尚未连接的驱动器的 JOIN。<br>0137 系统试图删除尚未替换的驱动器的替换项。<br>0138 系统试图将驱动器连接到已连接的驱动器下的目录。<br>0139 系统试图将驱动器替换成已替换的驱动器下的目录。<br>0140 系统试图将驱动器连接到已替换的驱动器的一个目录中。<br>0141 系统试图将驱动器替换成到已连接的驱动器下的目录。<br>0142 此时系统无法运行 JOIN 或 SUBST。<br>0143 系统无法将驱动器连接到或替换成同一驱动器下的目录。<br>0144 此目录不是该根目录的子目录。<br>0145 该目录未清空。<br>0146 指定的路径已经在替换中使用。<br>0147 资源不足,无法执行该命令。<br>0148 此时无法使用指定的路径。<br>0149 试图连接或替换某个驱动器目录,该驱动器上的某个目录是上一次替换的目标目录。<br>0150 CONFIG.SYS 文件未指定系统跟踪信息,或禁止跟踪。<br>0151 DosMuxSemWait 的指定信号事件的数目不正确。<br>0152 DosMuxSemWait 没有运行;已经设置太多的标志。<br>0153 DosMuxSemWait 列表不正确。<br>0154 输入的卷标超过目标文件系统的标号字符长度极限。<br>0155 无法创建其他线程。<br>0156 接收进程拒绝该信号。<br>0157 已经放弃该区域,因此无法锁定。<br>0158 该区域已经解除锁定。<br>0159 线程标识符的地址错误。<br>0160 传到 DosExecPgm 的参数字符串错误。<br>0161 指定的路径无效。<br>0162 信号已挂起。<br>0164 系统无法创建其他线程。<br>0167 无法锁定文件的范围。<br>0170 所要求的资源正在使用中。<br>0173 锁定请求对于提供的取消区域不重要。<br>0174 文件系统不支持到锁定类型的自动更改。<br>0180 系统检测到错误的区域号码。<br>0182 操作系统无法运行 %1。<br>0183 不能创建已经存在的文件。<br>0186 传送的标志不正确。<br>0187 找不到指定的系统信号名称。<br>0188 操作系统无法运行 %1。<br>0189 操作系统无法运行 %1。<br>0190 操作系统无法运行 %1。<br>0191 无法在 Win32 模式下运行 %1。<br>0192 操作系统无法运行 %1。<br>0193 %1 不是有效的 Win32 应用程序。<br>0194 操作系统无法运行 %1。<br>0195 操作系统无法运行 %1。<br>0196 操作系统无法运行此应用程序。<br>0197 当前无法配置操作系统运行此应用程序。<br>0198 操作系统无法运行 %1。<br>0199 操作系统无法运行此应用程序。<br>0200 代码段应小于 64K。<br>0201 操作系统无法运行 %1。<br>0202 操作系统无法运行 %1。<br>0203 系统找不到输入的环境选项。<br>0205 在命令子树中的进程没有信号句柄。<br>0206 文件名或扩展名太长。<br>0207 环 2 堆栈正在使用中。<br>0208 输入的全局文件名字符<code>*</code>或<code>?</code>不正确,或指定的全局文件名字符太多。<br>0209 所发送的信号不正确。<br>0210 无法设置信号处理程序。<br>0212 区域已锁定,无法重新分配。<br>0214 附加到此程序或动态链接模块的动态链接模块太多。<br>0215 无法嵌套调用 LoadModule。<br>0216 图像文件 %1 有效,但不适用于本机类型。<br>0230 管道状态无效。<br>0231 所有的管道实例都处于忙状态。<br>0232 管道正在关闭。<br>0233 在管道的另一端没有进程。<br>0234 有更多可用的数据。<br>0240 已取消会话。<br>0254 指定的扩展属性名无效。<br>0255 扩展属性不一致。<br>0258 等待操作过时。<br>0259 没有其他可用数据。<br>0266 无法使用复制功能。<br>0267 目录名无效。<br>0275 扩展属性不匹配缓冲区。<br>0276 所装载的文件系统上的扩展属性文件已被损坏。<br>0277 扩展属性表格文件已满。<br>0278 指定的扩展属性句柄无效。<br>0282 安装的文件系统不支持扩展属性。<br>0288 试图释放不属于调用者的多路同步信号。<br>0298 信号投递的次数太多。<br>0299 仅完成部分 ReadProcessMemory 或 WriteProcessMemory 请求。<br>0300 操作锁定请求被拒绝。<br>0301 系统接收了一个无效的操作锁定确认。<br>0317 在 %2 的消息文件中,系统无法找到消息号为 0x%1 的消息文本。<br>0487 试图访问无效地址。<br>0534 运算结果超过 32 位。<br>0535 该管道的另一方有一进程。<br>0536 等候进程打开管道的另一端。<br>0994 拒绝对扩展属性的访问。<br>0995 由于线程退出或应用程序的要求,I/O 操作异常终止。<br>0996 重叠的 I/O 事件不处于已标记状态。<br>0997 正在处理重叠的 I/O 操作。<br>0998 对内存位置的无效访问。<br>0999 执行页内操作出错。<br>1001 递归太深;堆栈溢出。<br>1002 窗口无法用来发送消息。<br>1003 无法完成此项功能。<br>1004 标志无效。<br>1005 卷不包含已识别的文件系统。请确认所有需要的文件系统驱动程序都已经加载,而且卷没有任何损坏。<br>1006 某文件的卷已在外部改变,因而打开的文件不再有效。<br>1007 要求的操作无法以全屏幕模式执行。<br>1008 试图引用并不存在的符号。<br>1009 配置注册表数据库已损坏。<br>1010 配置注册表主键无效。<br>1011 无法打开配置注册表主键。<br>1012 无法读取配置注册表主键。<br>1013 无法写入配置注册表主键。<br>1014 必须使用日志文件或其他副本来恢复注册表数据库中的某个文件。恢复成功。<br>1015 注册表已损坏。可能是一个包含注册表数据文件的结构已损坏,也可能内存中该文件的系统映像已损坏,或者因为备份副本(或日志)不存在(或损坏)导致无法恢复该文件。<br>1016 由注册表引起的 I/O 操作发生了不可恢复的错误。注册表将不能读取、写出或刷新包含注册表系统映像的其中一个文件。<br>1017 系统试图将文件加载或还原到注册表中,但是,指定的文件不是注册表文件格式。<br>1018 试图在注册表键(已经标记为删除)中完成的操作非法。<br>1019 系统无法在注册表日志文件中分配所需的空间。<br>1020 无法在已经有子键或键值的注册表项中创建符号链接。<br>1021 在易失的父键下不能创建固定的子键。<br>1022 通知的更改请求已经完成,并且返回信息还没有被送到调用者的缓冲区中。调用者需要列举所有文件以找到改动的内容。<br>1051 已将停止控制发送给与其他运行服务相关的服务。<br>1052 所要求的控制对此服务无效。<br>1053 服务没有及时地响应启动或控制请求。<br>1054 无法为该服务创建线程。<br>1055 服务数据库已锁定。<br>1056 该服务的实例已在运行。<br>1057 帐户名无效或者不存在,或者指定帐户名的密码无效。<br>1058 服务无法启动,可能因为被禁用,也可能因为没有关联的可用设备。<br>1059 已经指定了循环服务的从属关系。<br>1060 指定的服务不是所安装的服务。<br>1061 该服务此时无法接收控制消息。<br>1062 服务尚未启动。<br>1063 服务进程无法连接到服务控制程序。<br>1064 处理控制请求时,服务出现意外情况。<br>1065 指定的数据库不存在。<br>1066 服务返回服务特定的错误码。<br>1067 进程意外地终止。 修改 my.ini文件  把路径修改<br>1068 无法启动从属服务或组。<br>1069 由于登录失败,没有启动服务。<br>1070 启动后,服务保持在启动挂起状态。<br>1071 指定的服务数据库锁定无效。<br>1072 指定的服务已经标记为删除。<br>1073 指定的服务已经存在。<br>1074 系统当前正以上一次运行成功的配置运行。<br>1075 从属服务不存在,或已经标记为删除。<br>1076 已接受使用当前引导作为最后的有效控制设置。<br>1077 自从上一次启动以后,没有再次启动过该服务。<br>1078 该名称已经用作服务名或服务显示名。<br>1079 此服务的帐户不同于运行于同一进程上的其它服务的帐户。<br>1080 只能为 Win32 服务设置失败操作,不能为驱动程序设置。<br>1081 这个服务所运行的进程和服务控制管理器相同。所以,如果服务进程意外中止的话,服务控制管理器无法进行任何操作。<br>1082 这个服务没有设置恢复程序。<br>1083 配置成在该可执行程序中运行的这个服务不能执行该服务。<br>1100 已经到达磁带的物理尽头。<br>1101 磁带访问到文件标记。<br>1102 到达磁带或分区首部。<br>1103 磁带访问到文件组的末尾。<br>1104 磁带上没有其他数据。<br>1105 磁带无法分区。<br>1106 访问多重卷分区的新磁带时,当前的区块大小不正确。<br>1107 加载磁带时,找不到磁带分区信息。<br>1108 无法锁定媒体退出功能。<br>1109 无法卸载媒体。<br>1110 驱动器中的媒体已经更改。<br>1111 已经复位 I/O 总线。<br>1112 驱动器中没有媒体。<br>1113 在目标多字节代码页中不存在对单码字符的映射。<br>1114 动态链接库 (DLL) 初始化例程失败。<br>1115 正在关闭系统。<br>1116 无法终止系统关机,因为没有进行中的关机操作。<br>1117 由于 I/O 设备出现错误,无法运行该请求。<br>1118 串行设备初始化失败。将卸载串行驱动程序。<br>1119 无法打开正与其他设备共享中断请求 (IRQ) 的设备。至少有一个使用该 IRQ 的设备已经打开。<br>1120 由于再次写入串行口,串行 I/O 操作已结束。(IOCTL_SERIAL_XOFF_COUNTER 为零。)<br>1121 由于超时,串行 I/O 操作已结束。 (IOCTL_SERIAL_XOFF_COUNTER 未达到零。)<br>1122 在软盘上找不到标识符地址标记。<br>1123 软盘扇区标识符字段与软盘控制器磁道地址不匹配。<br>1124 软盘控制器报告软盘驱动程序不能识别的错误。<br>1125 软盘控制器返回的结果和注册的不一致。<br>1126 访问硬盘时,再校准操作失败,再试一次后也无法操作。<br>1127 访问硬盘时,磁盘操作失败,再试一次后仍没有作用。<br>1128 访问硬盘时,需要重启动磁盘控制器,但仍未成功。<br>1129 磁带已卷到尽头。<br>1130 可用的服务器存储区不足,无法执行该命令。<br>1131 检测到潜在的死锁情况。<br>1132 指定的基址或文件偏移量没有正确对齐。<br>1140 试图更改系统电源状态的操作被另一应用程序或驱动程序禁止。<br>1141 系统 BIOS 无法更改系统电源状态。<br>1142 试图在一文件上创建超过系统允许数额的链接。<br>1150 指定的程序需要新的 Windows 版本。<br>1151 指定的程序不是 Windows 或 MS-DOS 程序。<br>1152 无法启动指定程序的多个实例。<br>1153 指定的程序是为 Windows 的早期版本编写的。<br>1154 运行此应用程序所需的某个库文件已损。<br>1155 没有应用程序与该操作中所指定的文件关联。<br>1156 将命令发送到应用程序时出现错误。<br>1157 找不到运行此应用程序所需的某个库文件。<br>1158 当前进程已使用了 Window 管理器对象的系统允许的所有句柄。<br>1159 消息只能与同步操作一起使用。<br>1160 指出的源元素没有媒体。<br>1161 指出的目标元素已包含媒体。<br>1162 指出的元素不存在。<br>1163 指出的元素是未显示的存储资源的一部分。<br>1164 指出的设备需要重新初始化,因为硬件有错误。<br>1165 设备显示在尝试进一步操作之前需要清除。<br>1166 设备显示它的门仍是打开状态。<br>1167 设备没有连接。<br>1168 找不到元素。<br>1169 索引中没有同指定项相匹配的项。cool<br>1170 在对象上不存在指定的属性集。<br>1171 传递到 GetMouseMovePoints 的点不在缓冲区中。<br>1172 跟踪(工作站)服务没运行。<br>1173 找不到卷 ID。<br>1175 无法删除要被替换的文件。<br>1176 无法将替换文件移到要被替换的文件。要被替换的文件保持原来的名称。<br>1177 无法将替换文件移到要被替换的文件。要被替换的文件已被重新命名为备份名称。<br>1178 卷更改记录被删除。<br>1179 卷更改记录服务不处于活动中。<br>1180 找到一份文件,但是可能不是正确的文件。<br>1181 日志项已从日志中删除。<br>1200 指定的设备名无效。<br>1201 设备当前虽然未连接,但它是记忆连接。<br>1202 试图记起已经记住的设备。<br>1203 网络供应商不接受给定的网络路径。<br>1204 指定的网络供应商名无效。<br>1205 无法打开网络连接配置文件。<br>1206 网络连接配置文件已损坏。<br>1207 无法列举非包容类。<br>1208 出现扩展错误。<br>1209 指定组名的格式无效。<br>1210 指定计算机名的格式无效。<br>1211 指定事件名的格式无效。<br>1212 指定域名的格式无效。<br>1213 指定服务名的格式无效。<br>1214 指定网络名的格式无效。<br>1215 指定共享名的格式无效。<br>1216 指定密码的格式无效。<br>1217 指定的邮件名无效。<br>1218 指定邮件目的地的格式无效。<br>1219 所提供的凭据与现有凭据设置冲突。<br>1220 试图与网络服务器建立会话,但目前与该服务器建立的会话太多。<br>1221 网络上的其他计算机已经使用该工作组或域名。<br>1222 网络不存在或者没有启动。<br>1223 用户已经取消该操作。<br>1224 所要求的操作无法在已经打开用户映射区域的文件中运行。<br>1225 远程系统拒绝网络连接。<br>1226 已经关闭网络连接。<br>1227 网络传输的终点已经有一个地址与其关联。<br>1228 网络终点尚未与地址关联。<br>1229 试图在不存在的网络连接中操作。<br>1230 试图在活动的网络连接上进行无效操作。<br>1231 不能访问网络位置。有关网络疑难解答的信息,请参阅 Windows 帮助。<br>1232 不能访问网络位置。有关网络疑难解答的信息,请参阅 Windows 帮助。<br>1233 不能访问网络位置。有关网络疑难解答的信息,请参阅 Windows 帮助。<br>1234 远程系统的目标网络端点没有运行任何服务。<br>1235 该请求已经终止。<br>1236 本地系统已经终止网络连接。<br>1237 无法完成操作。请再试一次。<br>1238 无法创建到该服务器的连接,因为已经到达了该帐户同时连接的最大数目。<br>1239 试图在该帐户未授权的时间内登录。<br>1240 尚未授权此帐户从该站登录网络。<br>1241 网络地址无法用于要求的操作。<br>1242 服务已经注册。<br>1243 指定的服务不存在。<br>1244 由于尚未验证用户身份,无法执行要求的操作。<br>1245 由于用户尚未登录网络,无法运行要求的操作。指定的服务不存在。<br>1246 继续工作。<br>1247 完成初始化操作后,试图再次运行初始化操作。<br>1248 没有其他本地设备。<br>1249 指定的站点不存在。<br>1250 具有指定名称的域控制器已经存在。<br>1251 只有连接到服务器上时,才支持该操作。<br>1252 即使没有改动,组策略框架也应该调用扩展。<br>1253 指定的用户没有一个有效的配置文件。<br>1254 Microsoft Small Business Server 不支持此操作。<br>1300 不是对所有的调用方分配引用特权。<br>1301 帐户名与安全标识符之间的映射未完成。<br>1302 没有为该帐户明确地设置系统配额限制。<br>1303 没有可用的密钥。返回已知的密钥。<br>1304 密码太复杂,无法转换成 LAN Manager 密码。返回的 LAN Manager 密码是空字符串。<br>1305 修订级别未知。<br>1306 表示两个修订级别不兼容。<br>1307 无法将此安全标识符指定为该对象的拥有者。<br>1308 无法将此安全标识符指定为主要的对象组。<br>1309 当前并未模拟客户的线程试图操作模拟令牌。<br>1310 不可以禁用该组。<br>1311 目前没有可用的登录服务器处理登录请求。<br>1312 指定的登录会话不存在。该会话可能已终止。<br>1313 指定的权限不存在。<br>1314 客户不保留请求的权限。<br>1315 提供的名称不是正确的帐户名称格式。<br>1316 指定的用户已经存在。<br>1317 指定的用户不存在。<br>1318 指定的组已经存在。<br>1319 指定的组不存在。<br>1320 或者指定的用户帐户已经是某个特定组的成员,或者也可能指定的组非空而不能被删除。<br>1321 指定的用户帐户不是所指定组帐户的成员。<br>1322 上次保留的管理帐户无法关闭或删除。<br>1323 无法更新密码。所输入的密码不正确。<br>1324 无法更新密码。所提供的新密码包含不可用于密码的值。<br>1325 无法更新密码。为新密码提供的值不符合字符域的长度、复杂性或历史要求。<br>1326 登录失败: 用户名未知或密码错误。<br>1327 登录失败: 用户帐户限制。<br>1328 登录失败: 违反帐户登录时间限制。<br>1329 登录失败: 禁止用户登录到该计算机上。<br>1330 登录失败: 指定的帐户密码已过期。<br>1331 登录失败: 当前禁用帐户。<br>1332 未完成帐户名与安全性标识符之间的映射。<br>1333 一次请求的本地用户标识符(LUID)太多。<br>1334 没有其他可用的本地用户标识符(LUID)。<br>1335 对这个特定使用来说,安全标识符的子部分是无效的。<br>1336 访问控制清单(ACL)结构无效。<br>1337 安全标识符结构无效。<br>1338 安全描述符结构无效。<br>1340 无法创建继承的访问控制列表(ACL)或访问控制项目(ACE)。<br>1341 当前已禁用服务器。<br>1342 当前已启用服务器。<br>1343 所提供的值是无效的标识符授权值。<br>1344 没有更多的内存用于更新安全信息。<br>1345 指定的属性无效,或指定的属性与整个组的属性不兼容。<br>1346 或者没有提供所申请的模仿级别,或者提供的模仿级别无效。<br>1347 无法打开匿名级安全性符号。<br>1348 所请求的验证信息类别无效。<br>1349 该类符号不能以所尝试的方式使用。<br>1350 无法在没有相关安全性的对象上运行安全操作。<br>1351 未能从域控制器读取配置信息,或者是因为机器不可使用,或者是访问被拒绝。<br>1352 安全帐户管理程序(SAM)或本地安全颁发机构(LSA)服务器状态不正确,所以无法运行安全操作。<br>1353 域处于执行安全操作的错误状态。<br>1354 该操作只能在域的主域控制器中执行。<br>1355 指定的域不存在或联系不上。<br>1356 指定的域已经存在。<br>1357 试图超过每个服务器域数目的极限。<br>1358 由于严重的媒体错误或磁盘的数据结构损坏,无法完成所请求的操作。<br>1359 发生内部错误。<br>1360 通用的访问类型包含在访问掩码中,该掩码已经映射为非通用类型。<br>1361 安全性描述符的格式错误(绝对或自相关)。<br>1362 请求的操作只准登录进程使用。该调用过程并未被记录为登录进程。<br>1363 无法用已经使用的标识符来启动新的登录会话。<br>1364 指定的确认数据包未知。<br>1365 登录会话的状态与请求的操作不一致。<br>1366 登录会话标识符正在使用中。<br>1367 登录请求包含无效的登录类型值。<br>1368 在使用命名管道读取数据之前,无法经由该管道模拟。<br>1369 注册表子树的事务状态与所请求的操作不兼容。<br>1370 突发的内部安全性数据库故障。<br>1371 无法在内部帐户下运行该操作。<br>1372 无法在该内部特定组中运行该操作。<br>1373 无法在该内部特定用户中运行该操作。<br>1374 因为该组当前是用户的主要组,所以不能从此组中删除用户。<br>1375 该符号已作为主要符号使用。<br>1376 指定的本地组不存在。<br>1377 指定的帐户名不是本地组的成员。<br>1378 指定的帐户名已经是本地组的成员。<br>1379 指定的本地组已经存在。<br>1380 登录失败: 用户在本计算机上没有被授与所需注册类型。<br>1381 超过了可以存储在单个系统中的最大机密限制。<br>1382 机密的长度超过了最大允许值。<br>1383 本地安全授权数据库包含内部不一致的错误。<br>1384 登录时,用户的安全性上下文累积太多的安全标识符。<br>1385 登录失败: 用户在本计算机上没有被授与所需注册类型。<br>1386 经交叉加密的密码必须更改用户密码。<br>1387 成员不存在,因此无法将其添加到本地组或从中删除。<br>1388 新成员的帐户类型有误,因此无法将其添加到本地组。<br>1389 指定的安全标识符太多。<br>1390 经交叉加密的密码必须更改该用户密码。<br>1391 表示 ACL 没有可继承的组件。<br>1392 文件或目录已损坏,无法读取数据。<br>1393 磁盘结构已损坏,无法读取数据。<br>1394 指定的登录会话没有用户会话密钥。<br>1395 正在访问的服务允许特定数目的连接。因为连接的数目已达到服务可接受的数目,所以此时无法创建新的服务连接。<br>1396 登录失败: 该目标帐户名称不正确。<br>1397 相互身份验证失败。该服务器在域控制器的密码过期。<br>1398 在客户机和服务器之间有一个时间差。<br>1400 窗口句柄无效。<br>1401 菜单句柄无效。<br>1402 光标句柄无效。<br>1403 加速键表的句柄无效。<br>1404 挂接句柄无效。<br>1405 多重窗口位置结构句柄无效。<br>1406 无法创建最上层的子窗口。<br>1407 找不到窗口类。<br>1408 窗口无效;属于其他线程。<br>1409 已经注册热键。<br>1410 类已经存在。<br>1411 类不存在。<br>1412 类窗口仍打开着。<br>1413 索引无效。<br>1414 图标句柄无效。<br>1415 使用私人对话框窗口字。<br>1416 找不到列表框标识符。<br>1417 找不到任何通配符。<br>1418 线程没有打开剪贴板。<br>1419 尚未注册热键。<br>1420 该窗口不是有效的对话框窗口。<br>1421 找不到控制标识符。<br>1422 由于没有编辑控制,因此该组合框的消息无效。<br>1423 窗口不是组合框。<br>1424 高度必须小于 256。<br>1425 设备上下文(DC)句柄无效。<br>1426 挂接过程类型无效。<br>1427 挂接过程无效。<br>1428 不能在无模块句柄的情况下设置非本地的挂接。<br>1429 只能全局设置该挂接过程。<br>1430 已安装日记挂接过程。<br>1431 未安装挂接过程。<br>1432 单选列表框的消息无效。<br>1433 LB_SETCOUNT 发送到活动的列表框。<br>1434 该列表框不支持制表符。<br>1435 无法破坏由其他线程所创建的对象。<br>1436 子窗口不能有菜单。<br>1437 窗口没有系统菜单。<br>1438 消息框样式无效。<br>1439 系统范围内的(SPI_<em>)的参数无效。<br>1440 屏幕已经锁定。<br>1441 多重窗口位置结构中所有窗口句柄必须具有相同的父窗口。<br>1442 窗口不是子窗口。<br>1443 GW_</em> 命令无效。<br>1444 线程标识符无效。<br>1445 无法处理非多文档接口(MDI)窗口的消息。<br>1446 弹出式菜单已激活。<br>1447 窗口没有滚动条。<br>1448 滚动条范围不能大于 MAXLONG。<br>1449 无法以指定的方式显示或关闭窗口。<br>1450 系统资源不足,无法完成所请求的服务。<br>1451 系统资源不足,无法完成所请求的服务。<br>1452 系统资源不足,无法完成所请求的服务。<br>1453 配额不足,无法完成请求的服务。<br>1454 配额不足,无法完成请求的服务。<br>1455 页面交换文件太小,无法完成此项操作。<br>1456 找不到菜单项。<br>1457 键盘布局句柄无效。<br>1458 不允许使用挂钩类型。<br>1459 该操作需要交互式窗口工作站。<br>1460 由于超时时间已过,该操作返回。<br>1461 无效监视器句柄。<br>1500 事件日志文件已损坏。<br>1501 无法打开事件日志文件,因此无法启动事件记录服务。<br>1502 事件日志文件已满。<br>1503 事件日志文件在两次读取操作间已发生变化。 1601 无法访问 Windows 安装服务。请与技术支持人员联系,确认 Windows 安装服务是否注册正确。<br>1602 用户取消了安装。<br>1603 安装时发生严重错误。<br>1604 安装已挂起,未完成。<br>1605 这个操作只对当前安装的产品有效。<br>1606 功能 ID 未注册。<br>1607 组件 ID 未注册。<br>1608 未知属性。<br>1609 句柄处于不正确的状态。<br>1610 这个产品的配置数据已损坏。请与技术支持人员联系。<br>1611 组件限制语不存在。<br>1612 这个产品的安装来源无法使用。请验证来源是否存在,是否可以访问。<br>1613 Windows 安装服务无法安装这个安装程序包。您必须安装含有 Windows 安装服务新版本的 Windows Service Park。<br>1614 产品已卸载。<br>1615 SQL 查询语法不正确或不被支持。<br>1616 记录字符域不存在。<br>1617 设备已被删除。<br>1618 正在进行另一个安装操作。请在继续这个安装操作之前完成那个操作。<br>1619 未能打开这个安装程序包。请验证程序包是否存在,是否可以访问;或者与应用程序供应商联系,验证这是否是有效的 Windows 安装程序包。<br>1620 未能打开这个安装程序包。请与应用程序供应商联系,验证这是否是有效的 Windows 安装程序包。<br>1621 启动 Windows 安装服务用户界面时有错误。请与技术支持人员联系。<br>1622 打开安装日志文件时出错。请验证指定的日志文件位置是否存在,是否可以写入。<br>1623 安装程序包的语言不受系统支持。<br>1624 应用变换时出错。请验证指定的变换路径是否有效。<br>1625 系统策略禁止这个安装。请与系统管理员联系。<br>1626 无法执行函数。<br>1627 执行期间,函数出了问题。<br>1628 指定了无效的或未知的表格。<br>1629 提供的数据类型不对。<br>1630 这个类型的数据不受支持。<br>1631 Windows 安装服务未能启动。请与技术支持人员联系。<br>1632 临时文件夹已满或无法使用。请验证临时文件夹是否存在,是否可以写入。<br>1633 这个处理器类型不支持该安装程序包。请与产品供应商联系。<br>1634 组件没有在这台计算机上使用。<br>1635 无法打开修补程序包。请验证修补程序包是否存在,是否可以访问;或者与应用程序供应商联系,验证这是否是有效的 Windows 安装修补程序包。<br>1636 无法打开修补程序包。请与应用程序供应商联系,验证这是否是有效的 Windows 安装修补程序包。<br>1637 Windows 安装服务无法处理这个修补程序包。您必须安装含有 Windows 安装服务新版本的 Windows Service Pack。<br>1638 已安装这个产品的另一个版本。这个版本的安装无法继续。要配置或删除这个产品的现有版本,请用“控制面板”上的“添加/删除程序”。<br>1639 无效的命令行参数。有关详细的命令行帮助,请查阅 Windows 安装服务的 SDK。<br>1640 在终端服务远程会话期间,只有管理员有添加、删除或配置服务器软件的权限。如果您要在服务器上安装或配置软件,请与网络管理员联系。<br>1641 要求的操作已成功结束。要使改动生效,必须重新启动系统。<br>1642 Windows 安装服务无法安装升级修补程序,因为被升级的程序丢失,或者升级修补程序将更新此程序的其他版本。请确认要被升级的程序在您的计算机上且您的升级修补程序是正确的。<br>1700 串绑定无效。cool<br>1701 绑定句柄的类型错误。<br>1702 绑定句柄无效。<br>1703 不支持 RPC 协议顺序。<br>1704 RPC 协议序列无效。<br>1705 字符串的全球唯一标识符(UUID)无效。<br>1706 终点的格式无效。<br>1707 网络地址无效。<br>1708 未找到终点。<br>1709 超时设置值无效。<br>1710 找不到该对象的全球唯一标识符(UUID)。<br>1711 该对象的全球唯一标识符(UUID)已经注册。<br>1712 这一类型的全球唯一标识符(UUID)已经注册。<br>1713 RPC 服务器正在监听。<br>1714 尚未注册协议顺序。<br>1715 RPC 服务器不处于监听状态。<br>1716 管理程序的类型未知。<br>1717 接口未知。<br>1718 没有绑定。<br>1719 没有协议序列。<br>1720 无法创建终点。<br>1721 资源不足,无法完成该操作。<br>1722 RPC 服务器无法使用。<br>1723 RPC 服务器太忙,无法完成此项操作。<br>1724 网络选项无效。<br>1725 该线程中不存在活动的远程过程调用。<br>1726 远程过程调用失败。<br>1727 远程过程调用失败并且无法执行。<br>1728 远程过程调用(RPC)协议出现错误。<br>1730 RPC 服务器不支持传输语法。<br>1732 不支持这种类型的全球唯一标识符。<br>1733 标识无效。<br>1734 数组边界无效。<br>1735 绑定类型中不包含项目名。<br>1736 名称语法无效。<br>1737 不支持这种命名语法。<br>1739 没有可用的网络地址,无法创建全球唯一标识符(UUID)。<br>1740 终结点重复。<br>1741 身份验证类型未知。<br>1742 调用次数的上限太小。<br>1743 字符串太长。<br>1744 找不到 RPC 协议序列。<br>1745 过程号超出范围。<br>1746 此次绑定不包含任何身份验证信息。<br>1747 身份验证服务未知。<br>1748 身份验证级别未知。<br>1749 安全描述符无效。<br>1750 身份验证服务未知。<br>1751 项目无效。<br>1752 服务器的终结点无法执行此项操作。<br>1753 终点的映射器没有更多的终点可用。<br>1754 没有导出任何接口。<br>1755 项目名不完整。<br>1756 版本选项无效。<br>1757 没有其他成员。<br>1758 可以导出全部内容。<br>1759 未找到接口。<br>1760 项目已经存在。<br>1761 项目找不到。<br>1762 名称服务不可用。<br>1763 网络地址集无效。<br>1764 不支持请求的操作。<br>1765 没有可供冒仿的安全性描述符。<br>1766 远程过程调用(RPC)出现内部错误。<br>1767 RPC 服务器企图进行整除零运算。<br>1768 RPC 服务器出现寻址错误。<br>1769 RPC 服务器中的浮点运算造成被零除。<br>1770 RPC 服务器产生了浮点下溢错误。<br>1771 RPC 服务器产生了浮点上溢错误。<br>1772 可用于自动句柄绑定的 RPC 服务器列表已经用完。<br>1773 无法打开字符转换表文件。<br>1774 包含字符转换表的文件小于 512 个字节。<br>1775 在远程过程调用中,客户机向主机传送了一个空的描述体句柄。<br>1777 远程过程调用中的描述体句柄发生变化。<br>1778 发送到远程过程调用的绑定句柄不匹配。<br>1779 占位程序无法获得远程过程调用的句柄。<br>1780 将空的参考指针发送给占位程序。<br>1781 列举值超出范围。<br>1782 字节数目太小。<br>1783 占位程序接收到错误数据。<br>1784 所提供的用户缓冲区对所申请的操作无效。<br>1785 无法识别磁盘媒体。它可能还未格式化。<br>1786 工作站没有信任密码。<br>1787 服务器上的安全数据库中没有该工作站信任关系的计算机帐户。<br>1788 建立主域和受托域间的信任关系失败。<br>1789 建立工作站和主域间的信任关系失败。<br>1790 网络登录失败。<br>1791 该线程执行过程中已经进行了远程过程调用。<br>1792 试图登录网络,但网络登录服务尚未启动。<br>1793 用户帐户已到期。<br>1794 重定向程序正在使用,无法卸载。<br>1795 已经安装所指定的打印机驱动程序。<br>1796 指定的端口未知。<br>1797 打印机驱动程序未知。<br>1798 打印处理程序未知。<br>1799 指定的分隔符文件无效。<br>1800 指定的优先级无效。<br>1801 打印机名无效。<br>1802 打印机已经存在。<br>1803 打印机命令无效。<br>1804 指定的数据类型无效。<br>1805 指定的环境无效。<br>1806 没有其他绑定。<br>1807 使用的帐户是跨网络的信任帐户。请使用全局用户帐户或本地用户帐户来访问此服务器。<br>1808 所使用的帐户是计算机帐户。请使用全局用户帐户或本地用户帐户来访问该服务器。<br>1809 使用的帐户是服务器信任帐户。请使用全局用户帐户或本地用户帐户来访问该服务器。<br>1810 指定的域名或安全标识符与域的信任信息不一致。<br>1811 服务器正在使用中,无法卸载。<br>1812 指定的映像文件不包含资源部分。<br>1813 在映像文件中找不到指定的资源类型。<br>1814 在映像文件中找不到指定的资源名称。<br>1815 在映像文件中找不到指定的资源语言 ID 。<br>1816 可用的配额不足,无法执行该命令。<br>1817 没有已注册的接口。<br>1818 远程过程调用被取消。<br>1819 绑定句柄不包含所有需要的信息。<br>1820 远程调用过程中发生通讯失败。<br>1821 所需的身份验证级别不被支持。<br>1822 主要的名称没有注册。<br>1823 指定的错误不是有效的 Windows RPC 错误代码。<br>1824 已分配仅在本机上有效的 UUID。<br>1825 产生了特定的安全包错误。<br>1826 没有取消线程。<br>1827 在编码/解码处理时的操作无效。<br>1828 序列化软件包的版本不兼容。<br>1829 RPC 占位程序的版本不兼容。<br>1830 RPC 管道对象无效或已损坏。<br>1831 试图在 RPC 管道对象上进行无效操作。<br>1832 不被支持的 RPC 管道版本。<br>1898 找不到组成员。<br>1899 无法创建终结点映射数据库条目。cool<br>1900 对象的全球标识符(UUID)为空。<br>1901 指定的时间无效。<br>1902 指定的表单名无效。<br>1903 指定的表单大小无效。<br>1904 指定的打印机句柄正在等候处理<br>1905 指定的打印机已经删除。<br>1906 打印机的状态无效。<br>1907 用户首次登录前,必须先更改其密码。<br>1908 找不到该域的域控制器。<br>1909 引用的帐户目前被锁定,可能无法登录。<br>1910 没有发现指定的此对象导出者。<br>1911 没有发现指定的对象。<br>1912 没有发现指定的对象解析器。<br>1913 一些待发数据仍停留在请求缓冲区内。<br>1914 无效的异步远程过程调用句柄。<br>1915 这个操作的异步 RPC 调用句柄不正确。<br>1916 RPC 管道对象已经关闭。<br>1917 RPC 调用在全部的管道都被处理之前完成。<br>1918 没有其他可用的数据来自 RPC 管道。<br>1919 这个机器没有可用的站点名。<br>1920 系统无法访问此文件。<br>1921 系统无法解析文件名。<br>1922 项目不是所要的类型。<br>1923 无法将所有对象的 UUID 导出到指定的项。<br>1924 无法将接口导出到指定的项。<br>1925 无法添加指定的配置文件项。<br>1926 无法添加指定的配置文件元素。<br>1927 无法删除指定的配置文件元素。<br>1928 无法添加组元素。<br>1929 无法删除组元素。<br>1005 创建表失败<br>1006 创建数据库失败<br>1007 数据库已存在,创建数据库失败<br>1008 数据库不存在,删除数据库失败<br>1009 不能删除数据库文件导致删除数据库失败<br>1010 不能删除数据目录导致删除数据库失败<br>1011 删除数据库文件失败<br>1012 不能读取系统表中的记录<br>1020 记录已被其他用户修改<br>1021 硬盘剩余空间不足,请加大硬盘可用空间<br>1022 关键字重复,更改记录失败<br>1023 关闭时发生错误<br>1024 读文件错误<br>1025 更改名字时发生错误<br>1026 写文件错误<br>1032 记录不存在<br>1036 数据表是只读的,不能对它进行修改<br>1037 系统内存不足,请重启数据库或重启服务器<br>1038 用于排序的内存不足,请增大排序缓冲区<br>1040 已到达数据库的最大连接数,请加大数据库可用连接数<br>1041 系统内存不足<br>1042 无效的主机名<br>1043 无效连接<br>1044 当前用户没有访问数据库的权限<br>1045 不能连接数据库,用户名或密码错误<br>1048 字段不能为空<br>1049 数据库不存在<br>1050 数据表已存在<br>1051 数据表不存在<br>1054 字段不存在<br>1062 字段值重复,入库失败<br>1065 无效的SQL语句,SQL语句为空<br>1081 不能建立Socket连接<br>1114 数据表已满,不能容纳任何记录<br>1116 打开的数据表太多<br>1129 数据库出现异常,请重启数据库<br>1130 连接数据库失败,没有连接数据库的权限<br>1133 数据库用户不存在<br>1141 当前用户无权访问数据库<br>1142 当前用户无权访问数据表<br>1143 当前用户无权访问数据表中的字段<br>1146 数据表不存在<br>1147 未定义用户对数据表的访问权限<br>1149 SQL语句语法错误<br>1158 网络错误,出现读错误,请检查网络连接状况<br>1159 网络错误,读超时,请检查网络连接状况<br>1160 网络错误,出现写错误,请检查网络连接状况<br>1161 网络错误,写超时,请检查网络连接状况<br>1169 字段值重复,更新记录失败<br>1177 打开数据表失败<br>1180 提交事务失败<br>1181 回滚事务失败<br>1203 当前用户和数据库建立的连接已到达数据库的最大连接数,请增大可用的数据库连接数或重启数据库<br>1205 加锁超时<br>1211 当前用户没有创建用户的权限<br>1216 外键约束检查失败,更新子表记录失败<br>1217 外键约束检查失败,删除或修改主表记录失败<br>1226 当前用户使用的资源已超过所允许的资源,请重启数据库或重启服务器<br>1227 权限不足,您无权进行此操作<br>1235 MySQL版本过低,不具有本功能<br>1250 客户端不支持服务器要求的认证协议,请考虑升级客户端。<br>2000 像素格式无效。<br>2001 指定的驱动程序无效。<br>2002 该操作的窗口样式或类属性无效。<br>2003 不支持请求的图元文件操作。<br>2004 不支持请求的转换操作。<br>2005 不支持请求的剪辑操作。<br>2010 指定的颜色管理模块无效。<br>2011 指定的颜色文件配置无效。<br>2012 找不到指定的标识。<br>2013 所需的标识不存在。<br>2014 指定的标识已经存在。<br>2015 指定的颜色文件配置与任何设备都不相关。<br>2016 找不到该指定的颜色文件配置。<br>2017 指定的颜色空间无效。<br>2018 图像颜色管理没有启用。<br>2019 在删除该颜色转换时有一个错误。<br>2020 指定的颜色转换无效。<br>2021 指定的转换与位图的颜色空间不匹配。<br>2022 指定的命名颜色索引在配置文件中不存在。<br>2108 网络连接已成功,但需要提示用户输入一个不同于原始指定的密码。<br>2202 指定的用户名无效。<br>2250 网络连接不存在。<br>2401 在这个网络连接上已存在打开的文件或未处理的请求。<br>2402 活动的连接仍然存在。<br>2404 设备正由活动进程使用,无法断开连接。<br>3000 指定的打印监视程序未知。<br>3001 指定的打印机驱动程序正在使用中。<br>3002 找不到假脱机文件。<br>3003 没有发出 StartDocPrinter 调用。<br>3004 尚未发出 AddJob 调用。<br>3005 指定的打印处理程序已经安装。<br>3006 指定的打印监视程序已经安装。<br>3007 该指定的打印监视器不具备所要求的功能。<br>3008 指定的打印机监视器正在使用中。<br>3009 当打印机有作业排成队列时此操作请求是不允许的。<br>3010 请求的操作成功。只有重新启动系统,更改才会生效。<br>3011 请求的操作成功。只有重新启动服务,更改才会生效。<br>3012 找不到打印机。<br>4000 WINS 在处理命令时遇到执行错误。<br>4001 无法删除本地的 WINS。<br>4002 从文件引入失败。<br>4003 备份失败。以前执行过完整的备份吗?<br>4004 备份失败。请检查备份数据库的目标目录。<br>4005 名称在 WINS 数据库中不存在。<br>4006 不允许进行未配置部分的复制。<br>4100 DHCP 客户获得一个在网上已被使用的 IP 地址。直到 DHCP 客户可以获得新的地址前,本地接口将被禁用。<br>4200 WMI 数据提供程序不能识别传来的 GUID 是否有效。<br>4201 WMI 数据提供程序无法识别传来的实例名是否有效。<br>4202 WMI 数据提供程序无法识别传来的数据项目标识符是否有效。<br>4203 无法完成 WMI 请求,请重试一次。<br>4204 找不到 WMI 数据提供程序。<br>4205 WMI 数据提供程序引用到一个未注册的实例组。<br>4206 WMI 数据块或事件通知已启用。<br>4207 WMI 数据块不再可用。<br>4208 WMI 数据服务无法使用。<br>4209 WMI 数据提供程序无法完成请求。<br>4210 WMI MOF 信息无效。<br>4211 WMI 注册信息无效。<br>4212 WMI 数据块或事件通知已禁用。<br>4213 WMI 数据项目或数据块为只读。<br>4214 WMI 数据项目或数据块不能更改。<br>6118 该工作组的服务器列表当前不可用。<br>6200 要正常运行,任务计划程序服务的配置必须在系统帐户中运行。单独的任务可以被配置成在其他帐户中运行。<br>7001 指定的会话名无效。<br>7002 指定的协议驱动程序无效。<br>7003 在系统路径上找不到指定的协议驱动程序。<br>7004 在系统路径上找不到指定的终端连接驱动程序。<br>7005 不能为这个会话创建一个事件日志的注册键。<br>7006 同名的一个服务已经在系统中存在。<br>7007 在会话上一个关闭操作挂起。<br>7008 没有可用的输出缓冲器。<br>7009 找不到 MODEM.INF 文件。<br>7010 在 MODEM.INF 中没有找到调制解调器名称。<br>7011 调制解调器没有接受发送给它的指令。验证配置的调制解调器与连接的调制解调器是否匹配。 7012 调制解调器没有响应发送给它的指令。验证该调制解调器是否接线正确并且打开了电源开关。<br>7013 由于断开连接,载波检测失败或载波停止。<br>7014 在要求的时间内没有发现拨号音。确定电话线连接正确并可使用。<br>7015 在远程站点回叫时检测到了占线信号。<br>7016 在回叫时远程站点上检测到了声音。<br>7017 传输驱动程序错误<br>7022 找不到指定的会话。<br>7023 指定的会话名称已处于使用中。<br>7024 由于终端连接目前正在忙于处理一个连接、断开连接、复位或删除操作,无法完成该请求的操作。<br>7025 试图连接到其视频模式不受当前客户支持的会话。<br>7035 应用程序尝试启动 DOS 图形模式。不支持 DOS 图形模式。<br>7037 您的交互式登录权限已被禁用。请与您的管理员联系。<br>7038 该请求的操作只能在系统控制台上执行。这通常是一个驱动程序或系统 DLL 要求直接控制台访问的结果。<br>7040 客户未能对服务器连接消息作出响应。<br>7041 不支持断开控制台会话。<br>7042 不支持重新将一个断开的会话连接到控制台。<br>7044 远程控制另一个会话的请求被拒绝。<br>7045 拒绝请求的会话访问。<br>7049 指定的终端连接驱动程序无效。<br>7050 不能远程控制请求的会话。这也许是由于该会话被中断或目前没有一个用户登录。另外,您不能从该系统控制台远程控制一个会话或远程控制系统控制台。并且,您不能远程控制您自己的当前会话。<br>7051 该请求的会话没有配置成允许远程控制。<br>7052 连接到这个终端服务器的申请被拒绝。终端服务器客户许可证目前正在被另一个用户使用。请与系统管理员联系,获取一份新的终端服务器客户,其许可证号码必须是有效的、唯一的。<br>7053 连接到这个终端服务器的申请被拒绝。还没有为这份终端服务器客户输入您的终端服务器客户许可证号码。请与系统管理员联系,为该终端服务器客户输入一个有效的、唯一的许可证号码。<br>7054 系统已达到其授权的登录限制。请以后再试一次。<br>7055 您正在使用的客户没有使用该系统的授权。您的登录请求被拒绝。<br>7056 系统许可证已过期。您的登录请求被拒绝。</p>]]></content>
      
      
      <categories>
          
          <category> database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Error </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[ERR] 1005 errno 28 MySQL报错，不能操作元数据</title>
      <link href="/30845/"/>
      <url>/30845/</url>
      
        <content type="html"><![CDATA[<h1 id="错误定位"><a href="#错误定位" class="headerlink" title="错误定位"></a>错误定位</h1><p>公司开发环境的MySQL在使用过程中发生以下错误：</p><p><img src="/images/pasted-5.png" alt="错误截图"></p><p>经试验发现只要是修改元数据相关操作，alter 和 create操作都会报这个错误</p><p><img src="/images/pasted-6.png" alt="建表错误"></p><a id="more"></a><p>在网上搜索相关错误，并结合<a href="/MySQL错误errorno大全">MySQL错误code</a>表定位到问题：得出结论，磁盘写入 有问题</p><p>在服务器上执行<code>df -h</code>命令，并没有网上别的帖子中的那种磁盘满了的情况，MySQL的安装目录/data 目录下还有大量的存储空间未使用</p><p><img src="/images/pasted-7.png" alt="服务器磁盘空间占用"></p><p>经排查，发现磁盘inodes空间满了，导致不能创建新目录和文件</p><p><img src="/images/pasted-8.png" alt="inodes使用情况"></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>删除无用的文件</p><p>关于inodes的理解和操作可参考<a href="https://www.jianshu.com/p/c27ee8eeb872" target="_blank" rel="noopener">Free inodes is less than</a><br>关于inodes的重新分配可参考<a href="https://www.baishitou.cn/1180.html" target="_blank" rel="noopener">ext4最大inodes文件数</a></p>]]></content>
      
      
      <categories>
          
          <category> database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Error </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Redis的事务和消息机制</title>
      <link href="/4123/"/>
      <url>/4123/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis的事务和消息机制"><a href="#Redis的事务和消息机制" class="headerlink" title="Redis的事务和消息机制"></a>Redis的事务和消息机制</h1><p><img src="/images/pasted-2.png" alt="upload successful"><br><a id="more"></a></p><h2 id="Java操作事务"><a href="#Java操作事务" class="headerlink" title="Java操作事务"></a>Java操作事务</h2>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransaction</span><span class="params">()</span></span>&#123;</span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"192.168.131.111"</span>, <span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启事务</span></span><br><span class="line">Transaction tc = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">tc = jedis.multi();</span><br><span class="line">tc.decrBy(<span class="string">"tom"</span>,<span class="number">100</span>);</span><br><span class="line">tc.incrBy(<span class="string">"mike"</span>, <span class="number">100</span>);</span><br><span class="line"><span class="comment">//提交事务</span></span><br><span class="line">tc.exec();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="comment">//回滚事务</span></span><br><span class="line">tc.discard();</span><br><span class="line">&#125;</span><br><span class="line">jedis.disconnect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java操作锁"><a href="#Java操作锁" class="headerlink" title="Java操作锁"></a>Java操作锁</h2>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLock</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"192.168.131.111"</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="comment">//对ticket加锁，入伙在事务执行的过程中，该值有变化，则抛出异常</span></span><br><span class="line">jedis.watch(<span class="string">"ticket"</span>);</span><br><span class="line"></span><br><span class="line">Transaction tc = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">tc = jedis.multi();</span><br><span class="line">tc.decr(<span class="string">"ticket"</span>); <span class="comment">//车票刷量减1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果在线程睡眠的过程中 ticket监控的值有变化，则抛出异常</span></span><br><span class="line">Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">tc.decrBy(<span class="string">"tom"</span>, <span class="number">100</span>);<span class="comment">//扣取买票钱</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//提交事务</span></span><br><span class="line">tc.exec();</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">tc.discard();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-3.png" alt="upload successful"></p><p><img src="/images/pasted-4.png" alt="redis Message"></p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ul><li><p>使用Java程序实现消息的发布与订阅，需要继承JedisPubSub 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"192.168.131.111"</span>, <span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//subscribe 和 psubcribe 不能同时订阅</span></span><br><span class="line">jedis.subscribe(<span class="keyword">new</span> MyRedisMessageConsumer(), <span class="string">"channel"</span>);</span><br><span class="line"><span class="comment">//jedis.pshbscribe(new MyRedisMessageConsumer(),"channel");</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现Redis消息的接受者</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRedisMessageConsumer</span> <span class="keyword">extends</span> <span class="title">JedisPubSub</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(String channel, String message)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 订阅某个频道的</span></span><br><span class="line">System.out.println(channel+ <span class="string">"\t"</span> + message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPMessage</span><span class="params">(String pattern, String channel, String message)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 用通配符匹配频道</span></span><br><span class="line">System.out.println(<span class="string">"pattern:"</span>+pattern);</span><br><span class="line">System.out.println(<span class="string">"channel:"</span>+channel);</span><br><span class="line">System.out.println(<span class="string">"message:"</span>+message);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPSubscribe</span><span class="params">(String arg0, <span class="keyword">int</span> arg1)</span> </span>&#123;&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPUnsubscribe</span><span class="params">(String arg0, <span class="keyword">int</span> arg1)</span> </span>&#123;&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSubscribe</span><span class="params">(String arg0, <span class="keyword">int</span> arg1)</span> </span>&#123;&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUnsubscribe</span><span class="params">(String arg0, <span class="keyword">int</span> arg1)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 事务 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
